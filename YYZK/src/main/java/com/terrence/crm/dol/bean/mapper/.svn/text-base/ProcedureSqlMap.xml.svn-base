<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Procedure">

        
	<resultMap id="RM.Procedure" class="com.terrence.crm.dol.bean.Procedure">
        <result property="procedurerid" column="procedurerid"/>
        <result property="procedurename" column="procedurename"/>
        <result property="processid" column="processid"/>
        <result property="teamid" column="teamid"/>
        <result property="price" column="price"/>
    </resultMap>
	
	<resultMap id="RM.Procedure.findids" class="com.terrence.crm.dol.bean.Procedure">
        <result property="procedurerid" column="procedurerid"/>
    </resultMap>  

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Procedure.columns">
	    <![CDATA[
        	t_procedure.procedurerid ,
        	t_procedure.procedurename ,
        	t_procedure.processid ,
        	t_procedure.teamid ,
        	t_procedure.price 
	    ]]>
	</sql>
	
   <insert id="Procedure.insert" >
   		<selectKey resultClass="java.lang.Long" type="post" keyProperty="procedurerid" >
            SELECT  @@identity  AS  ID
        </selectKey>
        INSERT INTO
        t_procedure (
        	procedurename 
        	<dynamic prepend="">
	        	<isNotEmpty prepend="," property="price">
		        	price
		        </isNotEmpty>
        	 </dynamic>
        ) VALUES (
        	#procedurename#
        	 <dynamic prepend="">
	        	<isNotEmpty prepend="," property="price">
		        	#price#
		        </isNotEmpty>
        	 </dynamic>
        )
   
        
    </insert>

	<update id="Procedure.update" parameterClass="com.terrence.crm.dol.bean.Procedure">         
        UPDATE t_procedure 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="procedurename">
	        	procedurename = #procedurename# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="processid">
	        	processid = #processid# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="teamid">
	        	teamid = #teamid# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="price">
	        	price = #price# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        procedurerid = #procedurerid# 
    </update>
    
	<delete id="Procedure.delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from t_procedure where
       procedurerid = #procedurerid# 
    ]]>
    </delete>
    
    <delete id="Procedure.deleteMultiple">
    <![CDATA[
        DELETE FROM 
        	t_procedure 
        WHERE
       procedurerid in ($procedurerid$) 
    ]]>
    </delete>
    
    <select id="Procedure.getById" resultMap="RM.Procedure">
	    select <include refid="Procedure.columns"/>
	    
	        from t_procedure 
	        where 
		        procedurerid = #procedurerid# 
	    
    </select>
    
	<select id="Procedure.getByProperty" resultMap="RM.Procedure">
		select <include refid="Procedure.columns"/> from t_procedure where $propertyName$=#propertyValue#
	</select>
	
	<select id="Procedure.findByItemId" resultMap="RM.Procedure">
		select <include refid="Procedure.columns"/> 
		 from t_item_procedure 
		  left join t_procedure 
		on t_item_procedure.procedureid=t_procedure.procedurerid
		
		where t_item_procedure.itemid=#propertyid#
		
		ORDER BY t_item_procedure.seqno
	</select>
	
	
	
	
	
	<sql id="Procedure.findPage.where">
	    <dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="procedurerid">
	             t_procedure.procedurerid = #procedurerid#    
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="procedurename">
	             t_procedure.procedurename like ('%$procedurename$%')   
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="processid">
	             t_procedure.processid = #processid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="teamid">
	             t_procedure.teamid = #teamid#
	       </isNotEmpty>
	       
	    </dynamic>	
	</sql>
	 
    <sql id="Procedure.findPage.and">
			<isNotEmpty prepend="AND" property="procedurerid">
	             t_procedure.procedurerid = #procedurerid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="procedurename">
	             t_procedure.procedurename like ('%$procedurename$%') 
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="processid">
	             t_procedure.processid = #processid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="teamid">
	             t_procedure.teamid = #teamid#
	       </isNotEmpty>
	</sql>
    
    <select id="Procedure.findList" resultMap="RM.Procedure">
    	SELECT 
    		<include refid="Procedure.columns"/> 
    	FROM 
    		t_procedure
		<include refid="Procedure.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    
    <select id="Procedure.findPage.count" resultClass="long">
    <![CDATA[
        select 
        count(*)
        from t_procedure
    ]]>
		<include refid="Procedure.findPage.where"/>    
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
   
    <select id="Procedure.findPage" resultMap="RM.Procedure">
    	select <include refid="Procedure.columns"/>	    
	        from t_procedure 	   
		<include refid="Procedure.findPage.where"/>		
		<isNotEmpty property="sortColumns">ORDER BY $sortColumns$</isNotEmpty>
		
    </select>
     -->
	<select id="Procedure.findPage" resultMap="RM.Procedure">
    	select <include refid="Procedure.columns"/>	    
	        from t_procedure where 1=1 
	   <isNotEmpty property="notTop">  and 
       procedurerid 
	   not in(select $notTop$ 
       procedurerid 
	   from t_procedure <include refid="Procedure.findPage.where"/>
	   	   <isNotEmpty property="sortColumns"> ORDER BY $sortColumns$	</isNotEmpty>) 
	   	</isNotEmpty>    
	   	<include refid="Procedure.findPage.and"/>
    	<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
	
		
    </select>


<select id="Procedure.findids" resultMap="RM.Procedure.findids">
	select procedurerid from t_procedure 
	where 1=1
	<isNotEmpty prepend="and" property="procedurename">
		procedurename like('%$procedurename$%')
	</isNotEmpty>
	
	 
</select>





	
</sqlMap>
