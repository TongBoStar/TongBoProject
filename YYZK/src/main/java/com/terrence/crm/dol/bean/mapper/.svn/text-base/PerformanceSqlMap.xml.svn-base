<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Performance">

        
	<resultMap id="RM.Performance" class="com.terrence.crm.dol.bean.Performance">
        <result property="pid" column="pid"/>
        <result property="salesman" column="salesman"/>
        <result property="balanceprice" column="balanceprice"/>
        <result property="listprice" column="listprice"/>
        <result property="ordercode" column="ordercode"/>
        <result property="salestype" column="salestype"/>
        <result property="provinceid" column="provinceid"/>
        <result property="servicecharge" column="servicecharge"/>
        <result property="outlay" column="outlay"/>
        <result property="outlaya" column="outlaya"/>
        <result property="outlayb" column="outlayb"/>
        <result property="outlayc" column="outlayc"/>
        <result property="outlayd" column="outlayd"/>
        <result property="outlaye" column="outlaye"/>
        <result property="blancea" column="blancea"/>
        <result property="blanceb" column="blanceb"/>
        <result property="blancec" column="blancec"/>
        <result property="blanced" column="blanced"/>
        <result property="blancee" column="blancee"/>
        <result property="overb" column="overb"/>
        <result property="overc" column="overc"/>
        <result property="overd" column="overd"/>
        <result property="overe" column="overe"/>
        <result property="discountrate" column="discountrate"/>
        <result property="fbase" column="fbase"/>
        <result property="createdate" column="createdate"/>
        <result property="fmodel" column="fmodel"/>
        <result property="fquarter" column="fquarter"/>
        <result property="fyear" column="fyear"/>
        <result property="contractcode" column="contractcode"/>
        <result property="pdcount" column="pdcount"/>
        <result property="plbonus" column="plbonus"/>
        <result property="blancestatus" column="blancestatus"/>
        <result property="outlaystatus" column="outlaystatus"/>
        <result property="ploroverstatus" column="ploroverstatus"/>
        <result property="outlayrate" column="outlayrate"/>
        <result property="blancerate" column="blancerate"/>
        <result property="overrate" column="overrate"/>
        <result property="pratio" column="pratio"/>
        <result property="productId" column="productid"/>
    </resultMap>
    <resultMap id="RM.Performance.Admin" class="com.terrence.crm.dol.bean.Performance">
        <result property="salesman" column="salesman"/>
        <result property="balanceprice" column="balanceprice"/>
        <result property="outlay" column="outlay"/>
        <result property="overe" column="overe"/>
        <result property="fquarter" column="fquarter"/>
        <result property="fyear" column="fyear"/>
        <result property="plbonus" column="plbonus"/>
        <result property="admin" resultMap="RM.Performance.AdminDetail"/>
    </resultMap>
	<resultMap class="com.terrence.crm.dol.bean.Admin" id="RM.Performance.AdminDetail">
		<result property="adminName" column="adminName"/>
	</resultMap>
	<!-- 系统订单审核后该订单的奖励人信息返回属性 -->
	<resultMap id="RM.Performance.getSysorderSaleInfo" class="com.terrence.crm.dol.bean.Performance">
        <result property="ordercode" column="ordercode"/>
        <result property="operator" column="operator"/>
        <result property="operatorName" column="operatorName"/>
        <result property="salestype" column="salestype"/>
        <result property="blance" column="blance"/>
        <result property="overs" column="overs"/>
        <result property="outlay" column="outlay"/>
        <result property="plbonus" column="plbonus"/>
    </resultMap>
	  
	
	<!-- <resultMap id="RM.performance.select.list.data" class="com.terrence.crm.dol.bean.Performance">
        <result property="pid" column="pid"/>
        <result property="salesman" column="salesman"/>
        <result property="balanceprice" column="balanceprice"/>
        <result property="listprice" column="listprice"/>
        <result property="ordercode" column="ordercode"/>
        <result property="salestype" column="salestype"/>
        <result property="provinceid" column="provinceid"/>
        <result property="servicecharge" column="servicecharge"/>
        <result property="outlay" column="outlay"/>
        <result property="outlaya" column="outlaya"/>
        <result property="outlayb" column="outlayb"/>
        <result property="outlayc" column="outlayc"/>
        <result property="outlayd" column="outlayd"/>
        <result property="outlaye" column="outlaye"/>
        <result property="blancea" column="blancea"/>
        <result property="blanceb" column="blanceb"/>
        <result property="blancec" column="blancec"/>
        <result property="blanced" column="blanced"/>
        <result property="blancee" column="blancee"/>
        <result property="overb" column="overb"/>
        <result property="overc" column="overc"/>
        <result property="overd" column="overd"/>
        <result property="overe" column="overe"/>
        <result property="discountrate" column="discountrate"/>
        <result property="fbase" column="fbase"/>
        <result property="createdate" column="createdate"/>
        <result property="fmodel" column="fmodel"/>
        <result property="fquarter" column="fquarter"/>
        <result property="fyear" column="fyear"/>
        <result property="contractcode" column="contractcode"/>
        <result property="pdcount" column="pdcount"/>
        <result property="plbonus" column="plbonus"/>
        <result property="adminName" column="adminName"/>
        <result property="teamseq" column="teamseq"/>
        <result property="perlist" column='{fyear=fyear,salesman=salesman}' select="performa.select.outlay.data.list"/>
    </resultMap> -->
    
    <resultMap  id="perform.list.select.year" class="com.terrence.crm.dol.bean.Performance">
    	<result property="fyear" column="fyear"/>
    	<result property="salesman" column="salesman"/>
		<result property="adminName" column="adminName"/>
		<result property="teamseq" column="teamseq"/>
		<result property="fquarter" column="fquarter"/>
		<result property="outlayayear" column="outlayayear"/>
		<result property="outlaybyear" column="outlaybyear"/>
		<result property="outlaycyear" column="outlaycyear"/>
		<result property="outlaydyear" column="outlaydyear"/>
		<result property="outlayeyear" column="outlayeyear"/>
		<result property="perlist" column='{fyear=fyear,salesman=salesman}' select="performa.select.outlay.data.list"/>
		
		<result property="fquarList" column='{fyear=fyear,salesman=salesman,fquarter=fquarter}' select="outlaypay.sumfamount.select.year"/>
		<result property="yearfamList" column='{fyear=fyear,salesman=salesman}' select="outlaypay.yearfam.total.select"/>
	</resultMap>
	<resultMap id="outlaypay.bean.result" class="com.terrence.crm.dol.bean.Outlaypay">
        <result property="sumfamount" column="sumfamount"/>
    </resultMap>
		<resultMap id="outlaypay.yearfam.data" class="com.terrence.crm.dol.bean.Outlaypay">
        <result property="yearfamount" column="yearfamount"/>
    </resultMap>
	
	
	 <resultMap  id="perform.list.all.year.data" class="com.terrence.crm.dol.bean.Performance">
		<result property="outlayayeartal" column="outlayayeartal"/>
		<result property="outlaybyeartal" column="outlaybyeartal"/>
		<result property="outlaycyeartal" column="outlaycyeartal"/>
		<result property="outlaydyeartal" column="outlaydyeartal"/>
		<result property="outlayeyeartal" column="outlayeyeartal"/>
	</resultMap>
	
	<resultMap id="MR.findBonus.for.performance" class="com.terrence.crm.dol.bean.Performance">
        <result property="blanceasum" column="blanceasum"/>
        <result property="blancebsum" column="blancebsum"/>
        <result property="blancecsum" column="blancecsum"/>
        <result property="blancedsum" column="blancedsum"/>
        <result property="blanceesum" column="blanceesum"/>
        <result property="overbsum" column="overbsum"/>
        <result property="overcsum" column="overcsum"/>
        <result property="overdsum" column="overdsum"/>
        <result property="overesum" column="overesum"/>
        <result property="fmodel" column="fmodel"/>
    </resultMap>
    <resultMap id="RM.Performance.OrderCode" class="com.terrence.crm.dol.bean.Performance">
        <result property="ordercode" column="ordercode"/>
    </resultMap>
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Performance.columns">
	    <![CDATA[
        	t_performance.pid ,
        	t_performance.salesman ,
        	t_performance.balanceprice ,
        	t_performance.listprice ,
        	t_performance.ordercode ,
        	t_performance.salestype ,
        	t_performance.provinceid ,
        	t_performance.servicecharge ,
        	t_performance.outlay ,
        	t_performance.outlaya,
        	t_performance.outlayb,
        	t_performance.outlayc,
        	t_performance.outlayd,
        	t_performance.outlaye,
        	t_performance.blancea,
        	t_performance.blanceb,
        	t_performance.blancec,
        	t_performance.blanced,
        	t_performance.blancee,
        	t_performance.overb,
        	t_performance.overc,
        	t_performance.overd,
        	t_performance.overe,
        	t_performance.discountrate ,
        	t_performance.fbase ,
        	t_performance.createdate ,
        	t_performance.fmodel ,
        	t_performance.fquarter ,
        	t_performance.fyear ,
        	t_performance.contractcode ,
        	t_performance.pdcount ,
        	t_performance.plbonus,
        	t_performance.overrate,
        	t_performance.blancerate,
        	t_performance.outlayrate,
        	t_performance.ploroverstatus,
        	t_performance.outlaystatus,
        	t_performance.blancestatus,
        	t_performance.pratio,
        	t_performance.productid
	    ]]>
	</sql>
	
   <insert id="Performance.insert" >
    <![CDATA[
        INSERT INTO
        t_performance (
        	salesman ,
        	balanceprice ,
        	listprice ,
        	ordercode ,
        	salestype ,
        	provinceid ,
        	servicecharge ,
        	outlay ,
        	discountrate ,
        	fbase ,
        	createdate ,
        	fmodel ,
        	fquarter ,
        	fyear ,
        	contractcode ,
        	pdcount,
        	plbonus ,
        	blancea,
        	blanceb,
        	blancec,
        	blanced,
        	blancee,
        	overb,
        	overc,
        	overd,
        	overe,
        	outlaya,
        	outlayb,
        	outlayc,
        	outlayd,
        	outlaye,
        	operator,
        	forderdate,
        	productcode,
        	productid,
        	contractamount,
        	overrate,
        	blancerate,
        	outlayrate,
        	ploroverstatus,
        	outlaystatus,
        	blancestatus,
        	pratio
        ) VALUES (
        	#salesman# ,
        	#balanceprice# ,
        	#listprice# ,
        	#ordercode# ,
        	#salestype# ,
        	#provinceid# ,
        	#servicecharge# ,
        	#outlay# ,
        	#discountrate# ,
        	#fbase# ,
        	#createdate# ,
        	#fmodel# ,
        	#fquarter# ,
        	#fyear# ,
        	#contractcode# ,
        	#pdcount# ,
        	#plbonus#,
        	#blancea#,
        	#blanceb#,
        	#blancec#,
        	#blanced#,
        	#blancee#,
        	#overb#,
        	#overc#,
        	#overd#,
        	#overe#,
        	#outlaya#,
        	#outlayb#,
        	#outlayc#,
        	#outlayd#,
        	#outlaye#,
        	#operator#,
        	#forderdate#,
        	#productcode#,
        	#productId#,
        	#contractamount#,
        	#overrate#,
        	#blancerate#,
        	#outlayrate#,
        	#ploroverstatus#,
        	#outlaystatus#,
        	#blancestatus#,
        	#pratio#
        )
    ]]> 
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="pid" >
            SELECT  @@identity  AS  ID
        </selectKey>
    </insert>

	<insert id="Performance.BCE.insert">
		insert into t_performance(salesman,balanceprice,listprice,ordercode,salestype,provinceid,servicecharge,outlay,
		discountrate,fbase,createdate,fquarter,fyear,pdcount)
		select bcde.businessUserId,bcde.balanceprice,bcde.listprice,bcde.orderCode,bcde.productType,bcde.provinceId
		,bcde.servicecharge,balanceprice*poc poc,bcde.rate,t_pdbase.fbase,GETDATE() dt,bcde.q,bcde.y,bcde.productcount from (
		select sum(productCount) productcount,datename(year,contractTime) y,datename(QUARTER,contractTime) q,sum(balanceprice*productCount) balanceprice,SUM(listprice*productCount) listprice,t_product.ordercode, businessUserId,productType
		,t_sysorder.provinceId,sum(servicecharge*productCount) servicecharge,sum(balanceprice*productCount)/SUM(listprice*productCount) rate  from t_sysorder,t_product 
		where t_sysorder.orderCode=t_product.orderCode 
		and datename(year,contractTime)=2015
		and datename(QUARTER,contractTime)=2 and productType not in('A','D')
		group by t_product.ordercode, businessUserId,productType
		,t_sysorder.provinceId,datename(year,contractTime) ,datename(QUARTER,contractTime)) bcde left join t_pdbase on bcde.provinceid=t_pdbase.provinceid and bcde.productType=t_pdbase.salestypename
		and bcde.businessUserId=t_pdbase.adminId and 2015=t_pdbase.fyear
	</insert>
	<insert id="Performance.A.insert">
		insert into t_performance(salesman,balanceprice,listprice,ordercode,salestype,provinceid,servicecharge,
		discountrate,createdate,fquarter,fyear,pdcount)
		select businessUserId,sum(balanceprice*productCount) balanceprice,SUM(listprice*productCount) listprice,
		t_product.ordercode,productType,t_sysorder.provinceId,sum(servicecharge*productCount) servicecharge,
		sum(balanceprice*productCount)/SUM(listprice*productCount) rate,GETDATE(),datename(QUARTER,contractTime) q,
		datename(year,contractTime) y,sum(productCount) productcount from t_sysorder,t_product 
		where t_sysorder.orderCode=t_product.orderCode 
		and datename(year,contractTime)=2015
		and datename(QUARTER,contractTime)=2 and productType='A'
		group by t_product.ordercode, businessUserId,productType
		,t_sysorder.provinceId,datename(year,contractTime) ,datename(QUARTER,contractTime)
	</insert>
	<insert id="Performance.D.insert">
		insert into t_performance(salesman,balanceprice,listprice,ordercode,salestype,provinceid,servicecharge,
		discountrate,createdate,fquarter,fyear,pdcount)
		select bcde.businessUserId,bcde.balanceprice,bcde.listprice,bcde.orderCode,bcde.productType,bcde.provinceId,
		bcde.servicecharge,bcde.rate,GETDATE(),bcde.q,bcde.y,bcde.productcount from (
		select datename(year,contractTime) y,datename(QUARTER,contractTime) q,sum(productCount) productcount,sum(balanceprice*productCount) balanceprice,SUM(listprice*productCount) listprice,t_product.ordercode, businessUserId,productType
		,t_sysorder.provinceId,sum(servicecharge*productCount) servicecharge,sum(balanceprice*productCount)/SUM(listprice*productCount) rate  from t_sysorder,t_product 
		where t_sysorder.orderCode=t_product.orderCode 
		and datename(year,contractTime)=2015
		and datename(QUARTER,contractTime)=2 and productType='D'
		group by t_product.ordercode, businessUserId,productType
		,t_sysorder.provinceId,datename(year,contractTime) ,datename(QUARTER,contractTime)) bcde left join t_pdbase on bcde.provinceid=t_pdbase.provinceid and bcde.productType=t_pdbase.salestypename
		and bcde.businessUserId=t_pdbase.adminId and 2015=t_pdbase.fyear
	</insert>
	<insert id="Performance.PL.insert">
		insert into t_pl(fyear,fquarter,ordercode,adminid,pl3000,pl4200,ssv3500,spl2000)
		select datename(year,contractTime) y,datename(QUARTER,contractTime) q,ordercode,businessuserid, 
		0.03*pl3000count*(case when (case when pL3000ListPrice=0 then 0 else pL3000Unit/pL3000ListPrice end)>0.4 then pL3000Unit else 0 end) pl3000,
		0.03*pL4200Count*case when (case when pL4200ListPrice=0 then 0 else pL4200Unit/pL4200ListPrice end)>0.4 then pL4200Unit else 0 end pl4200 ,
		0.03*sSV3500Count*case when (case when sSV3500ListPrice=0 then 0 else sSV3500Unit/sSV3500ListPrice end)>0.4 then sSV3500Unit else 0 end ssv3500,
		0.01*sPL2000Count*case when (case when sPL2000ListPrice=0 then 0 else sPL2000Unit/sPL2000ListPrice end)>0.4 then sPL2000Unit else 0 end spl2000 
		from t_sysorder where datename(year,contractTime)=2015 and datename(QUARTER,contractTime)=2
	</insert>
	<update id="Performance.update" parameterClass="com.terrence.crm.dol.bean.Performance">         
        UPDATE t_performance 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="salesman">
	        	salesman = #salesman# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="balanceprice">
	        	balanceprice = #balanceprice# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="listprice">
	        	listprice = #listprice# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="ordercode">
	        	ordercode = #ordercode# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="salestype">
	        	salestype = #salestype# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="provinceid">
	        	provinceid = #provinceid# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="servicecharge">
	        	servicecharge = #servicecharge# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="outlay">
	        	outlay = #outlay# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="discountrate">
	        	discountrate = #discountrate# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fbase">
	        	fbase = #fbase# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="createdate">
	        	createdate = #createdate# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fmodel">
	        	fmodel = #fmodel# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fquarter">
	        	fquarter = #fquarter# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fyear">
	        	fyear = #fyear# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="contractcode">
	        	contractcode = #contractcode# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="pdcount">
	        	pdcount = #pdcount# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="blancestatus">
	        	blancestatus = #blancestatus# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="outlaystatus">
	        	outlaystatus = #outlaystatus# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="ploroverstatus">
	        	ploroverstatus = #ploroverstatus# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="outlayrate">
	        	outlayrate = #outlayrate# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="blancerate">
	        	blancerate = #blancerate# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="overrate">
	        	overrate = #overrate# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        pid = #pid# 
    </update>
    
	<delete id="Performance.delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from t_performance where
       pid = #pid# 
    ]]>
    </delete>
    
    <delete id="Performance.deleteMultiple">
    <![CDATA[
        DELETE FROM 
        	t_performance 
        WHERE
       pid in ($pid$) 
    ]]>
    </delete>
    <delete id="Performance.deleteWhere">
    	delete from t_performance where t_performance.fyear = #fyear# and  t_performance.fquarter = #fquarter#
    	and operator in <iterate property="operatorList" open="(" close=")" conjunction=",">'$operatorList[]$'</iterate> 
    </delete>
    <select id="Performance.getById" resultMap="RM.Performance">
	    select <include refid="Performance.columns"/>
	    
	        from t_performance 
	        where 
		        pid = #pid# 
	    
    </select>
    
	<select id="Performance.getByProperty" resultMap="RM.Performance">
		select <include refid="Performance.columns"/> from t_performance where $propertyName$=#propertyValue#
	</select>
	<!-- 显示系统订单审核后该订单的奖励人信息 -->
	<select id="Performance.getSysorderSaleInfo" resultMap="RM.Performance.getSysorderSaleInfo">
		select 
		  t_sysorder.ordercode,
		  t_performance.operator,
		  t_admin.adminName as operatorName,
		  t_performance.salestype,
		  CASE WHEN t_performance.salestype='A'  THEN SUM(t_performance.blancea)
		  WHEN t_performance.salestype='B'  THEN SUM(t_performance.blanceb)
		  WHEN t_performance.salestype='C'  THEN SUM(t_performance.blancec)
		  WHEN t_performance.salestype='D'  THEN SUM(t_performance.blanced)
		  WHEN t_performance.salestype='E'  THEN SUM(t_performance.blancee)
		  ELSE NULL END  blance,
		  CASE 
		  WHEN t_performance.salestype='A'  THEN SUM(0)
		  WHEN t_performance.salestype='B'  THEN SUM(t_performance.overb)
		  WHEN t_performance.salestype='C'  THEN SUM(t_performance.overc)
		  WHEN t_performance.salestype='D'  THEN SUM(t_performance.overd)
		  WHEN t_performance.salestype='E'  THEN SUM(t_performance.overe)
		  ELSE NULL END overs,
		  CASE WHEN t_performance.salestype='A'  THEN SUM(t_performance.outlaya)
		  WHEN t_performance.salestype='B'  THEN SUM(t_performance.outlayb)
		  WHEN t_performance.salestype='C'  THEN SUM(t_performance.outlayc)
		  WHEN t_performance.salestype='D'  THEN SUM(t_performance.outlayd)
		  WHEN t_performance.salestype='E'  THEN SUM(t_performance.outlaye)
		  ELSE NULL END outlay,
		  SUM(t_performance.plbonus) as plbonus
		  
		  from t_sysorder,t_performance,t_admin
		  
		  where t_sysorder.ordercode=t_performance.ordercode 
		  and t_performance.operator=t_admin.adminId
		  and t_sysorder.ordercode=#ordercode#
		  
		  group by t_performance.salesman,t_admin.adminName,t_sysorder.ordercode,
		  t_performance.operator,t_performance.salestype,
		  t_performance.plbonus         
	</select>
	
	<sql id="Performance.findPage.where">
	    <dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="pid">
	             t_performance.pid = #pid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="salesman">
	             t_performance.salesman = #salesman#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="balanceprice">
	             t_performance.balanceprice = #balanceprice#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="listprice">
	             t_performance.listprice = #listprice#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="ordercode">
	             t_performance.ordercode = #ordercode#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="salestype">
	             t_performance.salestype = #salestype#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="provinceid">
	             t_performance.provinceid = #provinceid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="servicecharge">
	             t_performance.servicecharge = #servicecharge#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="outlay">
	             t_performance.outlay = #outlay#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="discountrate">
	             t_performance.discountrate = #discountrate#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fbase">
	             t_performance.fbase = #fbase#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="createdateBegin">
	             t_performance.createdate &gt;= #createdateBegin#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="createdateEnd">
	             t_performance.createdate &lt;= #createdateEnd#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fmodel">
	             t_performance.fmodel = #fmodel#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fquarter">
	             t_performance.fquarter = #fquarter#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fyear">
	             t_performance.fyear = #fyear#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="contractcode">
	             t_performance.contractcode = #contractcode#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="pdcount">
	             t_performance.pdcount = #pdcount#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="blancestatus">
	             t_performance.blancestatus = #blancestatus#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="outlaystatus">
	             t_performance.outlaystatus = #outlaystatus#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="ploroverstatus">
	             t_performance.ploroverstatus = #ploroverstatus#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="outlayrate">
	             t_performance.outlayrate = #outlayrate#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="blancerate">
	             t_performance.blancerate = #blancerate#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="overrate">
	             t_performance.overrate = #overrate#
	       </isNotEmpty>
	       
	    </dynamic>	
	</sql>
	 
    <sql id="Performance.findPage.and">
			<isNotEmpty prepend="AND" property="pid">
	             t_performance.pid = #pid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="salesman">
	             t_performance.salesman = #salesman#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="balanceprice">
	             t_performance.balanceprice = #balanceprice#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="listprice">
	             t_performance.listprice = #listprice#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="ordercode">
	             t_performance.ordercode = #ordercode#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="salestype">
	             t_performance.salestype = #salestype#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="provinceid">
	             t_performance.provinceid = #provinceid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="servicecharge">
	             t_performance.servicecharge = #servicecharge#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="outlay">
	             t_performance.outlay = #outlay#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="discountrate">
	             t_performance.discountrate = #discountrate#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fbase">
	             t_performance.fbase = #fbase#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="createdateBegin">
	             t_performance.createdate &gt;= #createdateBegin#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="createdateEnd">
	             t_performance.createdate &lt;= #createdateEnd#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fmodel">
	             t_performance.fmodel = #fmodel#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fquarter">
	             t_performance.fquarter = #fquarter#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fyear">
	             t_performance.fyear = #fyear#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="contractcode">
	             t_performance.contractcode = #contractcode#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="pdcount">
	             t_performance.pdcount = #pdcount#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="blancestatus">
	             t_performance.blancestatus = #blancestatus#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="outlaystatus">
	             t_performance.outlaystatus = #outlaystatus#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="ploroverstatus">
	             t_performance.ploroverstatus = #ploroverstatus#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="outlayrate">
	             t_performance.outlayrate = #outlayrate#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="blancerate">
	             t_performance.blancerate = #blancerate#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="overrate">
	             t_performance.overrate = #overrate#
	       </isNotEmpty>
	</sql>
	
    <select id="Performance.Entity" resultMap="RM.Performance">
    	SELECT 	<include refid="Performance.columns"/> FROM t_performance <include refid="Performance.findPage.where"/>
    </select>
    
    <select id="Performance.findList" resultMap="RM.Performance">
    	SELECT 
    		<include refid="Performance.columns"/> 
    	FROM t_performance
		<include refid="Performance.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    <select id="Performance.Admin.findList" resultMap="RM.Performance.Admin">
     SELECT   sum(t_performance.balanceprice) balanceprice,
	 sum(t_performance.outlaya+t_performance.outlayb+t_performance.outlayc+t_performance.outlayd+t_performance.outlaye) outlay,
	 sum(t_performance.overb+t_performance.overc+t_performance.overd+t_performance.overe) overe,
	 sum(t_performance.plbonus) plbonus,adminName,adminid salesman,fyear,fquarter FROM t_performance right join t_admin 
	 on t_performance.salesman=t_admin.adminId and t_performance.fyear = #fyear#  and  t_performance.fquarter = #fquarter#
	 where t_admin.isdel=0 and t_admin.isstruct=1
	 <isNotEmpty prepend="AND" property="salesman">
	             t_performance.salesman = #salesman#
	  </isNotEmpty>
	 group by adminName,adminid,fyear,fquarter
    </select>
    <select id="Performance.Users.findList" resultMap="RM.Performance.Admin">
    with treeadmin(adminid,adminname,emp_superior) as
	(
		select adminid,adminname,emp_superior from t_admin where adminId=#salesman#
		union all
		select a.adminid,a.adminname,a.emp_superior from t_admin a,treeadmin b
		where a.emp_superior=b.adminid 
	)
    SELECT   sum(t_performance.balanceprice) balanceprice,
	 sum(t_performance.outlaya+t_performance.outlayb+t_performance.outlayc+t_performance.outlayd+t_performance.outlaye) outlay,
	 sum(t_performance.overb+t_performance.overc+t_performance.overd+t_performance.overe) overe,
	 sum(t_performance.plbonus) plbonus,adminName,salesman,fyear,fquarter FROM t_performance,t_admin 
	 where  t_performance.salesman=t_admin.adminId and t_performance.fyear = #fyear#  and  t_performance.fquarter = #fquarter#
	 and t_performance.salesman in (select adminid from treeadmin)
	 group by adminName,salesman,fyear,fquarter
    </select>
    <select id="Performance.findPage.count" resultClass="long">
    <![CDATA[
        select 
        count(*)
        from t_performance
    ]]>
		<include refid="Performance.findPage.where"/>    
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Sql.Performance.findPage" resultMap="RM.Performance">
    	select <include refid="Performance.columns"/>	    
	        from t_performance 	   
		<include refid="Performance.findPage.where"/>		
		<isNotEmpty property="sortColumns">ORDER BY $sortColumns$</isNotEmpty>
		
    </select>
    
	<select id="Performance.findPage" resultMap="RM.Performance">
    	select <include refid="Performance.columns"/>	    
	        from t_performance where 1=1 
	   <isNotEmpty property="notTop">  and 
       pid 
	   not in(select $notTop$ 
       pid 
	   from t_performance <include refid="Performance.findPage.where"/>
	   	   <isNotEmpty property="sortColumns"> ORDER BY $sortColumns$	</isNotEmpty>) 
	   	</isNotEmpty>    
	   	<include refid="Performance.findPage.and"/>
    	<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>		
    </select>
	
	
	<select id="Performance.find.performance.list.data" resultMap="perform.list.select.year">
    	SELECT 
    		t_admin.adminName adminName,t_admin.teamseq teamseq,fyear,salesman,fquarter,
    		sum(outlaya) outlayayear,sum(outlayb) outlaybyear,sum(outlayc) outlaycyear,
    		sum(outlayd) outlaydyear,sum(outlaye) outlayeyear
    	FROM 
    		t_performance
    		left join t_admin  on t_performance.salesman=t_admin.adminId
    		 where 1=1 
		<include refid="Performance.findPage.and"/>
		group by t_admin.adminName,t_admin.teamseq,fyear,salesman,fquarter
    </select>
    
    <select id="performa.select.outlay.data.list" resultMap="perform.list.all.year.data">
    	SELECT 
    		sum(outlaya) outlayayeartal,sum(outlayb) outlaybyeartal,sum(outlayc) outlaycyeartal,
    		sum(outlayd) outlaydyeartal,sum(outlaye) outlayeyeartal
    	FROM 
    		t_performance
    		 where 1=1 and fyear=#fyear# and salesman=#salesman# 
    </select>
    <select id="outlaypay.sumfamount.select.year" resultMap="outlaypay.bean.result">
    	select sum(famount) sumfamount from t_outlaypay where 1=1 and fyear=#fyear# and signin=#salesman# and fquarter=#fquarter#
    </select>
    <select id="outlaypay.yearfam.total.select" resultMap="outlaypay.yearfam.data">
    	select sum(famount) yearfamount from t_outlaypay where 1=1 and fyear=#fyear# and signin=#salesman#
    </select>
    
    
    <select id="Performance.findBonus.data" resultMap="MR.findBonus.for.performance">
    	select  sum(blancea) blanceasum,sum(blanceb) blancebsum,sum(blancec) blancecsum,sum(blanced) blancedsum,sum(blancee) blanceesum,
		sum(overb) overbsum,sum(overc) overcsum,sum(overd) overdsum,sum(overe) overesum,fmodel
 		from  t_performance 
    		 where 1=1 
		<include refid="Performance.findPage.and"/>
		 group by fmodel  order by  fmodel desc
    </select>
    <select id="find.uncomplicate.performance.A" resultMap="RM.Performance">
    	select <include refid="Performance.columns"/> from t_performance where salestype='A' and  isNull(blancestatus,0) !=3 
    	<isNotEmpty property="salesman">
			and salesman = #salesman# 
		</isNotEmpty>
    </select>
    <select id="find.ordercode.performance.BCDE" resultMap="RM.Performance.OrderCode">
    	select ordercode from t_performance where salestype!='A' 
    	<isNotEmpty property="salesman">
			and salesman = #salesman# 
		</isNotEmpty>
		group by ordercode
    </select>
    <select id="find.uncomplicate.performance.BCDE" resultMap="RM.Performance">
    	select <include refid="Performance.columns"/> from t_performance where salestype!='A' and isNull(blancestatus,0) !=3 and ordercode = #ordercode# 
    	<isNotEmpty property="salesman">
			and salesman = #salesman# 
		</isNotEmpty>
    </select>
    <update id="Performance.update.exludeA" parameterClass="com.terrence.crm.dol.bean.Performance">         
        UPDATE t_performance 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="ordercode">
	        	ordercode = #ordercode# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="blancestatus">
	        	blancestatus = #blancestatus# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="outlaystatus">
	        	outlaystatus = #outlaystatus# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="ploroverstatus">
	        	ploroverstatus = #ploroverstatus# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        salestype !='A' and ordercode = #ordercode# 
    </update>
</sqlMap>
