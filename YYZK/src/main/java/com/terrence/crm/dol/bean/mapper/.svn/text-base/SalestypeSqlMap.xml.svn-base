<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Salestype">

        
	<resultMap id="RM.Salestype" class="com.terrence.crm.dol.bean.Salestype">
        <result property="salestypeid" column="salestypeid"/>
        <result property="fname" column="fname"/>
        <result property="fitemid" column="fitemid"/>
        <result property="fnumber" column="fnumber"/>
        <result property="fdesc" column="fdesc"/>
        <result property="fclass" column="fclass"/>
        <result property="fbase" column="fbase"/>
    </resultMap>
	
	  

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Salestype.columns">
	    <![CDATA[
        	t_salestype.salestypeid ,
        	t_salestype.fname ,
        	t_salestype.fitemid ,
        	t_salestype.fnumber ,
        	t_salestype.fdesc ,
        	t_salestype.fclass ,
        	t_salestype.fbase 
	    ]]>
	</sql>
	
   <insert id="Salestype.insert" >
    <![CDATA[
        INSERT INTO
        t_salestype (
        	fname ,
        	fitemid ,
        	fnumber ,
        	fdesc ,
        	fclass ,
        	fbase 
        ) VALUES (
        	#fname# ,
        	#fitemid# ,
        	#fnumber# ,
        	#fdesc# ,
        	#fclass# ,
        	#fbase# 
        )
    ]]> 
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="salestypeid" >
            SELECT  @@identity  AS  ID
        </selectKey>
    </insert>

	<update id="Salestype.update" parameterClass="com.terrence.crm.dol.bean.Salestype">         
        UPDATE t_salestype 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="fname">
	        	fname = #fname# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fitemid">
	        	fitemid = #fitemid# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fnumber">
	        	fnumber = #fnumber# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fdesc">
	        	fdesc = #fdesc# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fclass">
	        	fclass = #fclass# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fbase">
	        	fbase = #fbase# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        salestypeid = #salestypeid# 
    </update>
    
	<delete id="Salestype.delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from t_salestype where
       salestypeid = #salestypeid# 
    ]]>
    </delete>
    
    <delete id="Salestype.deleteMultiple">
    <![CDATA[
        DELETE FROM 
        	t_salestype 
        WHERE
       salestypeid in ($salestypeid$) 
    ]]>
    </delete>
    
    <select id="Salestype.getById" resultMap="RM.Salestype">
	    select <include refid="Salestype.columns"/>
	    
	        from t_salestype 
	        where 
		        salestypeid = #salestypeid# 
	    
    </select>
    
	<select id="Salestype.getByProperty" resultMap="RM.Salestype">
		select <include refid="Salestype.columns"/> from t_salestype where $propertyName$=#propertyValue#
	</select>
	
	<sql id="Salestype.findPage.where">
	    <dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="salestypeid">
	             t_salestype.salestypeid = #salestypeid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fname">
	             t_salestype.fname = #fname#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fitemid">
	             t_salestype.fitemid = #fitemid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fnumber">
	             t_salestype.fnumber = #fnumber#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fdesc">
	             t_salestype.fdesc = #fdesc#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fclass">
	             t_salestype.fclass = #fclass#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fbase">
	             t_salestype.fbase = #fbase#
	       </isNotEmpty>
	       
	    </dynamic>	
	</sql>
	 
    <sql id="Salestype.findPage.and">
			<isNotEmpty prepend="AND" property="salestypeid">
	             t_salestype.salestypeid = #salestypeid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fname">
	             t_salestype.fname = #fname#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fitemid">
	             t_salestype.fitemid = #fitemid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fnumber">
	             t_salestype.fnumber = #fnumber#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fdesc">
	             t_salestype.fdesc = #fdesc#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fclass">
	             t_salestype.fclass = #fclass#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fbase">
	             t_salestype.fbase = #fbase#
	       </isNotEmpty>
	</sql>
	
    <select id="Salestype.Entity" resultMap="RM.Salestype">
    	SELECT 	<include refid="Salestype.columns"/> FROM t_salestype <include refid="Salestype.findPage.where"/>
    </select>
    
    <select id="Salestype.findList" resultMap="RM.Salestype">
    	SELECT 
    		<include refid="Salestype.columns"/> 
    	FROM 
    		t_salestype
		<include refid="Salestype.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    
    <select id="Salestype.findPage.count" resultClass="long">
    <![CDATA[
        select 
        count(*)
        from t_salestype
    ]]>
		<include refid="Salestype.findPage.where"/>    
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Sql.Salestype.findPage" resultMap="RM.Salestype">
    	select <include refid="Salestype.columns"/>	    
	        from t_salestype 	   
		<include refid="Salestype.findPage.where"/>		
		<isNotEmpty property="sortColumns">ORDER BY $sortColumns$</isNotEmpty>
		
    </select>
    
	<select id="Salestype.findPage" resultMap="RM.Salestype">
    	select <include refid="Salestype.columns"/>	    
	        from t_salestype where 1=1 
	   <isNotEmpty property="notTop">  and 
       salestypeid 
	   not in(select $notTop$ 
       salestypeid 
	   from t_salestype <include refid="Salestype.findPage.where"/>
	   	   <isNotEmpty property="sortColumns"> ORDER BY $sortColumns$	</isNotEmpty>) 
	   	</isNotEmpty>    
	   	<include refid="Salestype.findPage.and"/>
    	<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
	
		
    </select>
    
    <procedure id="Salestype.tongBu.ERP.data">
    	{call pro_synERPSalesType()}
    </procedure>
	
</sqlMap>
