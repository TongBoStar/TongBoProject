package com.terrence.crm.dol.service;
import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.Porequestentry;
import com.terrence.crm.dol.query.PorequestentryQuery;


public interface IPorequestentryService
{
	public Porequestentry getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(Porequestentry entity) throws ServiceException;
	
	public java.lang.Long save(Porequestentry entity) throws ServiceException;
	
	public Integer update(Porequestentry entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<Porequestentry> findPage(Page<Porequestentry> page, PorequestentryQuery query) throws ServiceException;
	
	public Page<Porequestentry> findPage(Page<Porequestentry> page,String statement, PorequestentryQuery query) throws ServiceException;
	
	public List<Porequestentry> findList(PorequestentryQuery query) throws ServiceException;
	
	public List<Porequestentry> findList(PorequestentryQuery query,Integer pageSize) throws ServiceException;
	
	public List<Porequestentry> findList(PorequestentryQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<Porequestentry> findAllList() throws ServiceException;

	public Porequestentry saveNewPo(Porequestentry entity) throws ServiceException;

	public List<Porequestentry> findlistToPOAll(
			PorequestentryQuery porequestentryQuery) throws ServiceException;

	public void updateforPQ(Porequestentry entity) throws ServiceException;

	public Integer updateforPoDetail(List<Long> checkedIdList,
			Porequestentry porequestentry) throws ServiceException;

	public List<Porequestentry> findListpush(List<Long> checkedIdList) throws ServiceException;

	public void deleteToDetail(List<Long> checkedIdList)  throws ServiceException;

	public List<Porequestentry> findListorder(List<Long> checkedIdList) throws ServiceException;

	public void updatestatus(Porequestentry entity) throws ServiceException;

	public List<Porequestentry> findunauditCheck(List<Long> checkedIdList) throws ServiceException;
	
	public List<Porequestentry> findItemcodeSum(PorequestentryQuery porequestentryQuery) throws ServiceException;
	
}