/*
 * 
 */
package com.terrence.crm.dol.action;


import java.util.List;

import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.annotation.Scope;
import org.springframework.security.core.context.SecurityContextHolder;

import com.terrence.crm.common.util.ChineseCharToEn;
import com.terrence.crm.dol.base.CrudActionSupport;
import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.Icbillno;
import com.terrence.crm.dol.bean.security.AdminSession;
import com.terrence.crm.dol.query.IcbillnoQuery;
import com.terrence.crm.dol.service.IIcbillnoService;

/**
 * 
 * 
 * @version 1.0
 */
@Scope("prototype")
@Namespace("/icbillno")
@Results( { @Result(name = CrudActionSupport.RELOAD, location = "icbillno." + CrudActionSupport.ACTIONSUFFIX + "?page.pageRequest=${page.pageRequest}", type = "redirect")})
public class IcbillnoAction extends CrudActionSupport<Icbillno>  implements ApplicationContextAware{
	
	
	@Autowired
	@Qualifier("icbillnoService")
	private IIcbillnoService icbillnoService;
	
	
	private Icbillno entity;

	private IcbillnoQuery icbillnoQuery;
	
	
	private java.lang.Long icbillnoId;
	
	/** 分页�?*/
	private Page<Icbillno> page = new Page<Icbillno>();
	
	/** Json操作信息 */
	private String[] resultInfo = new String[2];
	
	/** �??择的编号列表 */
	private List<java.lang.Long> checkedIdList;
	
	
	private ApplicationContext ctx;
	
	private List<Icbillno> icbillnoList;

	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#prepareModel()
	 */
	@Override
	protected void prepareModel() throws Exception {
		if (icbillnoId != null ) {
			entity = icbillnoService.getById(icbillnoId);
		} else {
			entity = new Icbillno();
		}
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#delete()
	 */
	@Override
	public String delete() throws Exception {
		
		try {
			icbillnoService.deleteByMultipleId(checkedIdList);
			
			resultInfo[0] = "0";
			resultInfo[1] = "删除成功";
			
			addActionMessage("删除成功");
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "删除失败";
			
			addActionMessage("删除失败");
		}
		return RELOAD;
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#deleteToJson()
	 */
	public String deleteToJson() throws Exception {
		
		try {
			delete();
			
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "删除失败";
		}
		return JSON;
	}

	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#input()
	 */
	@Override
	public String input() throws Exception {
		return INPUT;
	}
	
	public String listToQuery()throws Exception
	{
		if(icbillnoQuery == null) {
			icbillnoQuery = new IcbillnoQuery();
		}
		
		try {
			icbillnoList = icbillnoService.findList(icbillnoQuery);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#list()
	 */
	@Override
	public String list() throws Exception {
		if (!page.isOrderBySetted()) {
			page.setOrderBy("icbillnoId");
			page.setOrder(Page.DESC);
		}
		if(icbillnoQuery == null) {
			icbillnoQuery = new IcbillnoQuery();
		}
		
		try {
			page = icbillnoService.findPage(page, icbillnoQuery);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return SUCCESS;
	}
	
	public String listToJson() throws Exception {
		
		try {
			list();			
		} catch(Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}

	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#save()
	 */
	@Override
	public String save() throws Exception {
		
		try {
			icbillnoService.saveOrUpdate(entity);
			
			resultInfo[0] = "0";
			resultInfo[1] = "操作成功";
			
			addActionMessage("操作成功");
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
			
			addActionMessage("操作失败");
			return INPUT;
		}
		return RELOAD;
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#saveToJson()
	 */
	public String saveToJson() throws Exception {
		
		try {
			save();
				
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
		}
		return JSON;
	}

	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#show()
	 */
	@Override
	public String show() throws Exception {
		
		try {
			entity = icbillnoService.getById(icbillnoId);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return SHOW;
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#showToJson()
	 */
	public String showToJson() throws Exception {
		
		try {
			show();
		} catch(Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return JSON;
	}

	
	// -------------------自定义方�?
public String showByfpreletter() throws Exception {
		
		try {
			entity = icbillnoService.getByFpreletter(icbillnoQuery);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return JSON;
	}
	
	
	

	
	
	public String listAll() throws Exception {
		try{
			icbillnoList = icbillnoService.findAllList();
			resultInfo[0] = "0";
			resultInfo[1] = "操作成功";
		} catch(ServiceException e){
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e){
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
		}	
		
		return JSON;
	}
	
	
	
	public void prepareFindfcurno() throws Exception{
		prepareModel();
	}
	public String findfcurno() throws Exception {//查询当前编号
		
		try {
			entity = icbillnoService.findfcurno(icbillnoQuery);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return JSON;
	}
	//查找单据信息
	public String findBillnoInfo() throws Exception {//查询当前编号
		
		try {
			entity = icbillnoService.findBillnoInfo(icbillnoQuery);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return JSON;
	}
	//查找单据信息,返回编号
	public String findBillno() throws Exception {//查询当前编号
		
		try {
			entity = icbillnoService.findBillno(icbillnoQuery);
			AdminSession admin = (AdminSession)
			SecurityContextHolder.getContext().getAuthentication().getPrincipal();
			//String nowfbillno=entity.getNowfbillno()+"-"+admin.getAdmin().getLoginName();
			
			String adminName= admin.getAdmin().getAdminName();//一般用户名中文
			ChineseCharToEn cte = new ChineseCharToEn();
			adminName=cte.getAllFirstLetter(adminName);
			String nowfbillno=entity.getNowfbillno()+"-"+adminName;
			entity.setNowfbillno(nowfbillno);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return JSON;
	}
	
	
	public void prepareUpdatefcurno() throws Exception{
		prepareModel();
	}
	public String updatefcurno() throws Exception {//更新当前编码
			
			try {
				icbillnoService.updatefcurno(entity);
				
				resultInfo[0] = "0";
				resultInfo[1] = "操作成功";
				
			} catch(ServiceException e) {
				logger.error(e.getMessage());
				
				resultInfo[0] = "-1";
				resultInfo[1] = e.getMessage();
			} catch(Exception e) {
				logger.error(e.getMessage());
				
				resultInfo[0] = "-1";
				resultInfo[1] = "操作失败";
				
			}
			return JSON;
		}
	
	// -------------------自定义方�?
	/* (non-Javadoc)
	 * @see com.opensymphony.xwork2.ModelDriven#getModel()
	 */
	public Icbillno getModel() {
		return entity;
	}

	/**
	 * 
	 *
	 * @return the lottery query
	 */
	public IcbillnoQuery getIcbillnoQuery() {
		return icbillnoQuery;
	}

	
	public void setIcbillnoQuery(IcbillnoQuery icbillnoQuery) {
		this.icbillnoQuery = icbillnoQuery;
	}

	public void setIcbillnoId(java.lang.Long icbillnoId) {
		this.icbillnoId = icbillnoId;
	}
	
	
	public java.lang.Long getIcbillnoId() {
		return this.icbillnoId;
	}

	/**
	 * 获得分页�?
	 *
	 * @return the page
	 */
	public Page<Icbillno> getPage() {
		return page;
	}

	/**
	 * 设置分页�?
	 *
	 * @param page the new page
	 */
	public void setPage(Page<Icbillno> page) {
		this.page = page;
	}
	
	/**
	 * 获得Json操作信息
	 *
	 * @return the result info
	 */
	public String[] getResultInfo() {
		return resultInfo;
	}

	/**
	 * 获得�??择的编号列表
	 *
	 * @return 编号列表
	 */
	public List<java.lang.Long> getCheckedIdList() {
		return checkedIdList;
	}

	/**
	 * 设置编号列表
	 *
	 * @param checkedIdList 编号列表
	 */
	public void setCheckedIdList(List<java.lang.Long> checkedIdList) {
		this.checkedIdList = checkedIdList;
	}
	

	public void setApplicationContext(ApplicationContext ctx)
		throws BeansException {
	this.ctx = ctx;
	}

	public List<Icbillno> getIcbillnoList() {
		return icbillnoList;
	}
	
	
}
