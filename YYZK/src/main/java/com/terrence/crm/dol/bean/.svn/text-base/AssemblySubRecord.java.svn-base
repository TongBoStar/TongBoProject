package com.terrence.crm.dol.bean;

import javax.persistence.Entity;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

import com.terrence.crm.dol.base.BaseEntity;
import com.terrence.crm.dol.utils.DateConvertUtils;

@Entity
public class AssemblySubRecord extends BaseEntity implements java.io.Serializable {
	
	
	//columns START
	private java.lang.Long subrecid;
	private java.lang.Long recordid;
	private java.lang.String keyname;
	private java.lang.String keyexplain;
	private java.lang.Integer ispass;
	private java.lang.String fsexplain;
	//columns END

	
	public void setSubrecid(java.lang.Long value) {
		this.subrecid = value;
	}
	
	public java.lang.Long getSubrecid() {
		return this.subrecid;
	}
	public void setRecordid(java.lang.Long value) {
		this.recordid = value;
	}
	
	public java.lang.Long getRecordid() {
		return this.recordid;
	}
	public void setKeyname(java.lang.String value) {
		this.keyname = value;
	}
	
	public java.lang.String getKeyname() {
		return this.keyname;
	}
	public void setKeyexplain(java.lang.String value) {
		this.keyexplain = value;
	}
	
	public java.lang.String getKeyexplain() {
		return this.keyexplain;
	}
	public void setIspass(java.lang.Integer value) {
		this.ispass = value;
	}
	
	public java.lang.Integer getIspass() {
		return this.ispass;
	}
	public void setFsexplain(java.lang.String value) {
		this.fsexplain = value;
	}
	
	public java.lang.String getFsexplain() {
		return this.fsexplain;
	}
	
	private AssemblyRecord assemblyRecord;
	
	public void setAssemblyRecord(AssemblyRecord assemblyRecord){
		this.assemblyRecord = assemblyRecord;
	}
	
	public AssemblyRecord getAssemblyRecord() {
		return assemblyRecord;
	}

	public String toString() {
		return new ToStringBuilder(this)
			.append("Subrecid",getSubrecid())
			.append("Recordid",getRecordid())
			.append("Keyname",getKeyname())
			.append("Keyexplain",getKeyexplain())
			.append("Ispass",getIspass())
			.append("Fsexplain",getFsexplain())
			.toString();
	}
	
	public int hashCode() {
		return new HashCodeBuilder()
			.append(getSubrecid())
			.append(getRecordid())
			.append(getKeyname())
			.append(getKeyexplain())
			.append(getIspass())
			.append(getFsexplain())
			.toHashCode();
	}
	
	public boolean equals(Object obj) {
		if(obj instanceof AssemblySubRecord == false) return false;
		if(this == obj) return true;
		AssemblySubRecord other = (AssemblySubRecord)obj;
		return new EqualsBuilder()
			.append(getSubrecid(),other.getSubrecid())
			.append(getRecordid(),other.getRecordid())
			.append(getKeyname(),other.getKeyname())
			.append(getKeyexplain(),other.getKeyexplain())
			.append(getIspass(),other.getIspass())
			.append(getFsexplain(),other.getFsexplain())
			.isEquals();
	}
}

