package com.terrence.crm.dol.dao;

import java.util.List;

import org.springframework.dao.DataAccessException;

import com.terrence.crm.dol.base.IBaseDao;
import com.terrence.crm.dol.bean.BaseItem;
import com.terrence.crm.dol.bean.ItemDetailK3;
import com.terrence.crm.dol.query.BaseItemQuery;


public interface IBaseItemDao extends IBaseDao<BaseItem, java.lang.Long> {

	public void saveItemFromERPDateToWeb();
	//public Integer updateinfo(BaseItem entity) throws DataAccessException;
	//public Integer updateItemWithChildCode(BaseItem entity);

	//public BaseItem getByProperty(String propertyName,Object propertyValue);
	public void saveBaseItem()throws DataAccessException;
	public List<BaseItem> findAllitemProcess();
	public void updateItemName();
	
	/**2013-8-10 yan 批量修改**/
	
	public Integer updateById(BaseItem entity);
	public BaseItem getByIdBaseItem(Long baseItemId);
	public void saveANDupdate(BaseItem entity);
	public void updateBaseItemById(BaseItem entity);
	public BaseItem findBaseItemList(Long baseItemId);
	public void updateBaseItemBangById(BaseItem entity);
	public void saveSolution(BaseItem entity);
	public BaseItem getSolutionById(Long baseItemId);

	public BaseItem getByEntityVer(String statement, BaseItemQuery baseItemQuery);

	public List<BaseItem> finditemforPorequest(BaseItemQuery baseItemQuery);

	public BaseItem getBaseByColumn(String columnName,Object columnValue);

	public void updateFtax(BaseItem baseItem);
	public BaseItem findbitem(BaseItem baseitem);
	public BaseItem finditemBase(BaseItem baseItem);
	//public void syncBeaseItem();
	public Long getFinspctionlevelCount(String string, BaseItem entity);
	public BaseItem findbaseguide(BaseItemQuery baseItemQuery);
	public BaseItem findInKey(BaseItemQuery baseItemQuery);
	public BaseItem getByIdEntity(BaseItem bitem);
	public BaseItem findbs(BaseItem itembs);
	public BaseItem findbaseEntity(BaseItem bm);
	
	public List<BaseItem> findListv(BaseItemQuery baseItemQuery);
	public void saveinfo(BaseItem entity) throws DataAccessException;
	public Integer updateinfo(BaseItem entity) throws DataAccessException;
	public Integer updateByIdWithK3(BaseItem entity)throws DataAccessException;
	public List<BaseItem> findListByIds(BaseItem baseItem);
	//public Long findSyncBeaseItemNum();
	public Long findItemIsinventory(BaseItemQuery baseItemQuery);
	public Long findk3ItemIsinventory(BaseItemQuery baseItemQuery) ;
	
	//public void saveItemFromk3SyncDetail(BaseItem entity);
	//public Integer updateByItemcode(BaseItem entity);
	public void syncBeaseItem();
	public void syncBeaseItem2();
	public Long findSyncBeaseItemNum();
	 
	public void saveItemFromk3SyncDetail(BaseItem entity);
	public List<ItemDetailK3> findAllK3ItemDetail() ;
	public BaseItem getByProperty(String propertyName, Object propertyValue);
	public Integer updateByItemcode(BaseItem entity);
	public Integer updateItemWithChildCode(BaseItem entity);
	public List<BaseItem> findItemList(BaseItemQuery baseItemQuery) ;
	public List<BaseItem> finditemforTakeStock(BaseItemQuery baseItemQuery);
	public List<BaseItem> findEntityBase(BaseItemQuery bQuery);
	/**
	 * 根据物料编码查询有关物料的一些基础信息
	 * @param bQuery
	 * @return
	 */
	public List<BaseItem> findByItemcode(BaseItemQuery bQuery);
	
	public List<BaseItem> getPlanParam(BaseItemQuery bQuery);

	public List<BaseItem> getBaseItemCallslip(BaseItemQuery bQuery);
	public List<BaseItem> findBaseItemPorequest(BaseItemQuery bQuery);
	
	public List<BaseItem> findBaseItemPoorder(BaseItemQuery bQuery);

	public List<BaseItem> listItemInfo(BaseItemQuery baseItemQuery);

	public List<BaseItem> findBaseItemSeoutstock(BaseItemQuery baseItemQuery);

	public BaseItem findBaseItemStoreRoom(BaseItemQuery baseItemQuery);

	public List<BaseItem> findDifferentItems();
 
}
