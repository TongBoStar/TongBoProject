package com.terrence.crm.dol.service;
import java.util.List;

import com.terrence.crm.dol.base.IBaseService;
import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.Inventory;
import com.terrence.crm.dol.bean.OrdersProduct;
import com.terrence.crm.dol.bean.OrdersProductView;
import com.terrence.crm.dol.query.InventoryQuery;
public interface IInventoryService extends IBaseService<Inventory>
{
	public Inventory getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(Inventory entity) throws ServiceException;
	
	public java.lang.Long save(Inventory entity) throws ServiceException;
	
	public Integer update(Inventory entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<Inventory> findPage(Page<Inventory> page, InventoryQuery query) throws ServiceException;
	
	public List<Inventory> findList(InventoryQuery query) throws ServiceException;
	
	public List<Inventory> findList(InventoryQuery query,String statement) throws ServiceException;
	
	public List<Inventory> findList(InventoryQuery query,Integer pageSize) throws ServiceException;
	
	public List<Inventory> findAllList() throws ServiceException;
	
	public void saveSync(String statement)throws ServiceException;
	
	public void updateSync(String statement)throws ServiceException;
	/**
	 * 添加订单触发更新需求量
	 * @param ordersProductView
	 * @throws ServiceException
	 */
	public void updateDemand(OrdersProductView ordersProductView)throws ServiceException;
	public void updateDemand(String itemcode,Double demand)throws ServiceException;
	/****
	 * 初始历史需求量
	 * @param list
	 * @throws ServiceException
	 */
	public void updateDemand(List<OrdersProduct> list)throws ServiceException;
	public Inventory getByItemcode(InventoryQuery query)throws ServiceException;
	public List<Inventory> updateInventory(InventoryQuery query,String statement) throws ServiceException;

	public List<Inventory> findBatchno(Inventory entity) throws ServiceException;

	public Inventory find(InventoryQuery inventoryQuery) throws ServiceException;

}