package com.terrence.crm.dol.bean;

import javax.persistence.Entity;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

import com.terrence.crm.dol.base.BaseEntity;
import com.terrence.crm.dol.utils.DateConvertUtils;

@Entity
public class ReportPackage extends BaseEntity implements java.io.Serializable {
	
	
	//columns START
	private java.lang.Long pid;
	private java.lang.String fname;
	private java.lang.String fnotes;
	private java.util.Date createdate;
	//columns END


	public void setPid(java.lang.Long value) {
		this.pid = value;
	}
	
	public java.lang.Long getPid() {
		return this.pid;
	}
	public void setFname(java.lang.String value) {
		this.fname = value;
	}
	
	public java.lang.String getFname() {
		return this.fname;
	}
	public void setFnotes(java.lang.String value) {
		this.fnotes = value;
	}
	
	public java.lang.String getFnotes() {
		return this.fnotes;
	}
	
	
	public String getCreatedateString() {
		return DateConvertUtils.format(getCreatedate(), BaseEntity.DATE_FORMAT);
	}
	public void setCreatedate(java.util.Date value) {
		this.createdate = value;
	}
	
	public java.util.Date getCreatedate() {
		return this.createdate;
	}

	public String toString() {
		return new ToStringBuilder(this)
			.append("Pid",getPid())
			.append("Fname",getFname())
			.append("Fnotes",getFnotes())
			.append("Createdate",getCreatedate())
			.toString();
	}
	
	public int hashCode() {
		return new HashCodeBuilder()
			.append(getPid())
			.append(getFname())
			.append(getFnotes())
			.append(getCreatedate())
			.toHashCode();
	}
	
	public boolean equals(Object obj) {
		if(obj instanceof ReportPackage == false) return false;
		if(this == obj) return true;
		ReportPackage other = (ReportPackage)obj;
		return new EqualsBuilder()
			.append(getPid(),other.getPid())
			.append(getFname(),other.getFname())
			.append(getFnotes(),other.getFnotes())
			.append(getCreatedate(),other.getCreatedate())
			.isEquals();
	}
}

