package com.terrence.crm.dol.dao.impl;




import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.terrence.crm.dol.base.BaseIbatisDao;
import com.terrence.crm.dol.bean.Putstorage;
import com.terrence.crm.dol.dao.IPutstorageDao;

@Repository
public class PutstorageDao extends BaseIbatisDao<Putstorage,java.lang.Long> implements IPutstorageDao{

		
	public void saveOrUpdate(Putstorage entity) {
		if(entity.getFinterid() == null) 
			save(entity);
		else 
			update(entity);
	}
	
	public String getIbatisSqlMapNamespace() {
		
		return "Putstorage";
	}
	public Putstorage getByProperty(String propertyName, Object propertyValue) {
		Map map=new HashMap();		
		map.put("propertyName", propertyName);
		map.put("propertyValue", (String)propertyValue);
		return (Putstorage)this.getSqlMapClientTemplate().queryForObject("Putstorage.getByProperty", map);		
	}

	@Override
	public List<Putstorage> findAlldata() {
		return this.getSqlMapClientTemplate().queryForList("Putstorage.find.tongbu.findalldata");
	}

	@Override
	public List<Putstorage> findtongbu(Putstorage put) {
		return this.getSqlMapClientTemplate().queryForList("Putstorage.findtongbu.tdata", put);
	}

	@Override
	public Putstorage findputstorage(Putstorage pstorag) {
		return (Putstorage) this.getSqlMapClientTemplate().queryForObject("Putstorage.find.putstorage.entity", pstorag);
	}

	@Override
	public List<Putstorage> findIsold(Putstorage ageput) {

		return this.getSqlMapClientTemplate().queryForList("Putstorage.find.list.isold.data", ageput);
	}

}
