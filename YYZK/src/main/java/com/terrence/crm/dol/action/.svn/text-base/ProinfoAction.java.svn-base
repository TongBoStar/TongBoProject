package com.terrence.crm.dol.action;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.ui.freemarker.FreeMarkerTemplateUtils;

import com.opensymphony.xwork2.ActionSupport;
import com.terrence.core.dol.bean.Menu;
import com.terrence.crm.dol.bean.Admin;
import com.terrence.crm.dol.bean.security.AdminSession;
import com.terrence.crm.dol.service.IAdminService;
import com.terrence.crm.dol.utils.DateConvertUtils;
import com.terrence.crm.dol.utils.SpringSecurityUtils;

import freemarker.template.Configuration;
import freemarker.template.Template;

public class ProinfoAction extends ActionSupport{
	private static Logger logger = LoggerFactory.getLogger(ProinfoAction.class);
	private Admin admin;
	private Template template;
	
	private String mainMenu;
	
	@Autowired
	@Qualifier("adminService")
	private IAdminService adminService;
	@Autowired
	private Configuration freemarkerConfiguration;
	Long []activityCount;
	Long []supplierCount;
	public Long[] getSupplierCount() {
		return supplierCount;
	}

	public void setSupplierCount(Long[] supplierCount) {
		this.supplierCount = supplierCount;
	}

	public String execute() throws Exception {
		AdminSession adminSession = SpringSecurityUtils.getCurrentUser();
		admin = adminSession.getAdmin();
		
		/*更新最后登录时间*/
		Admin updateAdmin = new Admin();
		updateAdmin.setAdminId(admin.getAdminId());
		updateAdmin.setLastLoginTime(DateConvertUtils.getCurrentDateTime());
		adminService.updateLastTime(updateAdmin);
		
		
		initMenu(admin.getAuthorityList());
        return SUCCESS;
    }
	
	public void setFreemarkerConfiguration(Configuration freemarkerConfiguration) throws IOException {
		//根据freemarkerConfiguration的templateLoaderPath载入文件.
		this.freemarkerConfiguration=freemarkerConfiguration;
		
	}
	
	private void initMenu(List<Menu> authorityList) {
		Map<String, String> paramMap = new HashMap<String, String>();
		for(Menu authority: authorityList) {
			paramMap.put(authority.getKeywords(), authority.getName());
		}
		try {
			template = this.freemarkerConfiguration.getTemplate("template/projectMenuTemplate.ftl", "utf-8");
			mainMenu = FreeMarkerTemplateUtils.processTemplateIntoString(template, paramMap);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("构造菜单失败");
		}
			
			
	}
	
	public Admin getAdmin() {
		return admin;
	}

	public String getMainMenu() {
		return mainMenu;
	}

	public Long[] getActivityCount() {
		return activityCount;
	}

	public void setActivityCount(Long[] activityCount) {
		this.activityCount = activityCount;
	}

}
