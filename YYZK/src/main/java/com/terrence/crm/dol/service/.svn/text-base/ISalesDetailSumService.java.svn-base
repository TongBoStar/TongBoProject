package com.terrence.crm.dol.service;
import java.sql.SQLException;
import java.util.List;
import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.SalesDetailSum;
import com.terrence.crm.dol.query.SalesDetailSumQuery;

public interface ISalesDetailSumService
{
	public SalesDetailSum getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(SalesDetailSum entity) throws ServiceException;
	
	public java.lang.Long save(SalesDetailSum entity) throws ServiceException;
	
	public Integer update(SalesDetailSum entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<SalesDetailSum> findPage(Page<SalesDetailSum> page, SalesDetailSumQuery query) throws ServiceException;
	
	public Page<SalesDetailSum> findPage(Page<SalesDetailSum> page,String statement, SalesDetailSumQuery query) throws ServiceException;
	
	public List<SalesDetailSum> findList(SalesDetailSumQuery query) throws ServiceException;
	
	public List<SalesDetailSum> findList(SalesDetailSumQuery query,Integer pageSize) throws ServiceException;
	
	public List<SalesDetailSum> findList(SalesDetailSumQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<SalesDetailSum> findAllList() throws ServiceException;

	public SalesDetailSum saveNewSales(SalesDetailSum entity, List<Long> checkedIdList)  throws ServiceException;

	public List<SalesDetailSum> findsaleSumList(
			SalesDetailSumQuery salesDetailSumQuery)  throws ServiceException;



	public void findSaleDetailSum(List<Long> checkedIdList, boolean b, SalesDetailSumQuery query) throws ServiceException, SQLException;


	void updateSaleDetailSum(List<Long> checkedIdList, boolean falg, SalesDetailSumQuery query)
			throws ServiceException, SQLException;

	public void deleteData(SalesDetailSumQuery salesDetailSumQuery) throws ServiceException, SQLException;

	public void delSalesSum(SalesDetailSumQuery salesDetailSumQuery) throws ServiceException, SQLException;

	public SalesDetailSum saveNewSalesTwo(SalesDetailSum entity,
			List<Long> checkedIdList)  throws ServiceException, SQLException;

	public void saveReturnStock(SalesDetailSum entity) throws ServiceException;
	
}