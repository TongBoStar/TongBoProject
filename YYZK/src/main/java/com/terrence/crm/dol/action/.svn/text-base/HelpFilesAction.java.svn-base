package com.terrence.crm.dol.action;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.annotation.Scope;
import org.springframework.security.core.context.SecurityContextHolder;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import com.terrence.core.dol.bean.Menu;
import com.terrence.core.dol.query.MenuQuery;
import com.terrence.core.dol.service.IMenuService;
import com.terrence.crm.dol.base.CrudActionSupport;
import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.service.IHelpFilesService;
import com.terrence.crm.dol.utils.DateUtils;
import com.terrence.crm.dol.bean.HelpFiles;
import com.terrence.crm.dol.bean.security.AdminSession;
import com.terrence.crm.dol.query.HelpFilesQuery;
/**
 * hdd
 * @version 1.0
 */
@Scope("prototype")
@Namespace("/helpFiles")
@Results( { @Result(name = CrudActionSupport.RELOAD, location = "helpFiles."+ CrudActionSupport.ACTIONSUFFIX
		+ "?page.pageRequest=${page.pageRequest}", type = "redirect") })
public class HelpFilesAction extends CrudActionSupport<HelpFiles> implements ApplicationContextAware {

	@Autowired
	@Qualifier("helpFilesService")
	private IHelpFilesService helpFilesService;
	@Autowired
	@Qualifier("menuService")
	private IMenuService menuService;

	private HelpFiles entity;

	private HelpFilesQuery helpFilesQuery;

	private java.lang.Long helpFilesId;

	/** 分页器 */
	private Page<HelpFiles> page = new Page<HelpFiles>();

	/** Json操作信息 */
	private String[] resultInfo = new String[3];

	/** 所选择的编号列表 */
	private List<java.lang.Long> checkedIdList;

	private ApplicationContext ctx;
	private List<HelpFiles> helpFilesList;
	
	private List<Menu> menusList = new ArrayList<Menu>();
	private MenuQuery menuQuery = new MenuQuery();

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#prepareModel()
	 */
	@Override
	protected void prepareModel() throws Exception {
		if (helpFilesId != null) {
			entity = helpFilesService.getById(helpFilesId);
		} else {
			entity = new HelpFiles();
		}
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#delete()
	 */
	@Override
	public String delete() throws Exception {
		try {
			if(null!=checkedIdList && checkedIdList.size()>0){
				helpFilesService.deleteByMultipleId(checkedIdList);
			}else{
				helpFilesService.deleteById(helpFilesId);
			}
			resultInfo[0] = "0";
			resultInfo[1] = "删除成功";
			addActionMessage("删除成功");
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "删除失败";
			addActionMessage("删除失败");
		}
		return RELOAD;
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#deleteToJson()
	 */
	public String deleteToJson() throws Exception {
		try {
			delete();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "删除失败";
		}
		return JSON;
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#input()
	 */
	@Override
	public String input() throws Exception {
		return INPUT;
	}

	public String listToQuery() throws Exception {
		if (helpFilesQuery == null) {
			helpFilesQuery = new HelpFilesQuery();
		}
		try {
			helpFilesList = helpFilesService.findList(helpFilesQuery);
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch (ServiceException e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#list()
	 */
	@Override
	public String list() throws Exception {
		if (!page.isOrderBySetted()) {
			page.setOrderBy("id");
			page.setOrder(Page.DESC);
		}
		if (helpFilesQuery == null) {
			helpFilesQuery = new HelpFilesQuery();
		}
		try {
			page = helpFilesService.findPage(page, helpFilesQuery);
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch (ServiceException e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return SUCCESS;
	}

    /**
     * 查询列表
     * @return
     * @throws Exception
     */
	public String listQuery() throws Exception {
		if (!page.isOrderBySetted()) {
			page.setOrderBy("id");
			page.setOrder(Page.DESC);
		}
		if (helpFilesQuery == null) {
			helpFilesQuery = new HelpFilesQuery();
		}
		try {
			helpFilesList = helpFilesService.findList(helpFilesQuery);
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch (ServiceException e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return SUCCESS;
	}

	public String listToJson() throws Exception {
		try {
			list();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}

	public String listToJsonQuery() throws Exception {
		try {
			listQuery();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#save()
	 */
	@Override
	public String save() throws Exception {
		try {
			//先检查数据库中是否已经有此菜单的帮助文档
			HelpFilesQuery query = new HelpFilesQuery();
			query.setMenuId(entity.getMenuId());
			List<HelpFiles> lists = this.helpFilesService.findList(query);
			boolean flag = false;
			if(lists!=null&&lists.size()>0){
				//编辑的时候
				if(entity.getId()!=null&&!lists.get(0).getId().toString().equals(entity.getId().toString())){
					flag = true;
				}
				//新增的时候
				if(entity.getId()==null){
					flag = true;
				}
				
			}
			if(flag){
				resultInfo[0] = "-1";
				resultInfo[1] = "已有此菜单的帮助文档";
			}else{
				AdminSession admin = (AdminSession) SecurityContextHolder
						.getContext().getAuthentication().getPrincipal();
				if(entity.getId()==null){
					entity.setCreateTime(DateUtils.formtDateTime(new Date(), "yyyy-MM-dd HH:mm:ss"));
					entity.setUploaderId(admin.getAdmin().getAdminId());
				}
				entity.setModifyTime(DateUtils.formtDateTime(new Date(), "yyyy-MM-dd HH:mm:ss"));
				entity.setModifyId(admin.getAdmin().getAdminId());
				helpFilesService.saveOrUpdate(entity);
				resultInfo[0] = "0";
				resultInfo[1] = "操作成功";
				addActionMessage("操作成功");
			}
		} catch (ServiceException e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败," + e.getMessage();
			addActionMessage("操作失败");
			return INPUT;
		}
		return RELOAD;
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#saveToJson()
	 */
	public String saveToJson() throws Exception {
		try {
			save();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
		}
		return JSON;
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#show()
	 */
	@Override
	public String show() throws Exception {
		try {
			entity = helpFilesService.getById(helpFilesId);
			resultInfo[0] = "0";
			resultInfo[1] = "查询成功";
		} catch (ServiceException e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return SHOW;
	}

	/*
	 * (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#showToJson()
	 */
	public String showToJson() throws Exception {
		try {
			show();
		} catch (Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return JSON;
	}
	/** 下载文件 */
	public String loadFiles()throws Exception
	{
		entity = helpFilesService.getById(helpFilesId);
		HttpServletResponse response = ServletActionContext.getResponse();
		//String filename=entity.getFileName()+entity.getFilePath().substring(entity.getFilePath().indexOf('.'),entity.getFilePath().length());
		String filename=entity.getFileName();
		setResponseHeader(response, filename);
		try {
			helpFilesService.downLoadFiles(response,entity.getFilePath());
			response.getOutputStream().flush();
		    response.getOutputStream().close();
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return null;
	}
	/** 设置响应头 */
	public void setResponseHeader(HttpServletResponse response, String fileName) {
		try {
			response.setContentType("application/msexcel;charset=UTF-8");
			//两种方法都可以
			//response.setContentType("application/octet-stream;charset=iso-8859-1");
			response.setHeader("Content-Disposition", "attachment;filename="
					+ new String(fileName.getBytes("UTF-8"),"iso-8859-1"));
			// 客户端不缓存
			response.addHeader("Pargam", "no-cache");
			response.addHeader("Cache-Control", "no-cache");
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
	// -------------------自定义方法
	public String listAll() throws Exception {
		try {
			helpFilesList = helpFilesService.findAllList();
			resultInfo[0] = "0";
			resultInfo[1] = "操作成功";
		} catch (ServiceException e) {
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
		}
		return JSON;
	}
	public String listMenuAll() throws Exception {
		try {
			if(null==menuQuery){
				menuQuery = new MenuQuery();
			}
			menuQuery.setpId(203l);
			menusList = menuService.findList(menuQuery);
			menuQuery.setSortColumns(" sort asc ");
			resultInfo[0] = "0";
			resultInfo[1] = "操作成功";
		} catch (ServiceException e) {
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
		}
		return JSON;
	}
	
	// -------------------自定义方法
	/*
	 * (non-Javadoc)
	 * @see com.opensymphony.xwork2.ModelDriven#getModel()
	 */
	public HelpFiles getModel() {
		return entity;
	}

	/**
	 * 获得分页器
	 * @return the page
	 */
	public Page<HelpFiles> getPage() {
		return page;
	}

	public HelpFiles getEntity() {
		return entity;
	}
	public void setEntity(HelpFiles entity) {
		this.entity = entity;
	}
	public HelpFilesQuery getHelpFilesQuery() {
		return helpFilesQuery;
	}
	public void setHelpFilesQuery(HelpFilesQuery helpFilesQuery) {
		this.helpFilesQuery = helpFilesQuery;
	}
	public java.lang.Long getHelpFilesId() {
		return helpFilesId;
	}
	public void setHelpFilesId(java.lang.Long helpFilesId) {
		this.helpFilesId = helpFilesId;
	}
	public void setResultInfo(String[] resultInfo) {
		this.resultInfo = resultInfo;
	}
	/**
	 * 设置分页器
	 * @param page
	 *        the new page
 */
	public void setPage(Page<HelpFiles> page) {
		this.page = page;
	}
	/**
	 * 获得Json操作信息
	 * @return the result info
	 */
	public String[] getResultInfo() {
		return resultInfo;
	}
	/**
	 * 获得所选择的编号列表
	 * @return 编号列表
	 */
	public List<java.lang.Long> getCheckedIdList() {
		return checkedIdList;
	}
	/**
	 * 设置编号列表
	 * @param checkedIdList
	 *        编号列表
	 */
	public void setCheckedIdList(List<java.lang.Long> checkedIdList) {
		this.checkedIdList = checkedIdList;
	}
	public void setApplicationContext(ApplicationContext ctx)
			throws BeansException {
		this.ctx = ctx;
	}
	public List<HelpFiles> getHelpFilesList() {
		return helpFilesList;
	}

	public List<Menu> getMenusList() {
		return menusList;
	}

	public void setMenusList(List<Menu> menusList) {
		this.menusList = menusList;
	}

	public MenuQuery getMenuQuery() {
		return menuQuery;
	}

	public void setMenuQuery(MenuQuery menuQuery) {
		this.menuQuery = menuQuery;
	}
	
}
