<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ClientServiceblance">

<resultMap id="RM.ClientServiceblance" class="com.terrence.crm.dol.bean.ClientServiceblance">
	<result property="id" column="id"/>
	<result property="fcontractno" column="fcontractno"/>
	<result property="balanceDate" column="balanceDate"/>
	<result property="serviceHeader" column="serviceHeader"/>
	<result property="serviceFee" column="serviceFee"/>
	<result property="payfee" column="payfee"/>
	<result property="createaUserId" column="createaUserId"/>
	<result property="createUserName" column="createUserName"/>
	<result property="createDate" column="createDate"/>
	<result property="forderno" column="forderno"/>
</resultMap>

<!-- 用于select查询公用抽取的列 -->
<sql id="ClientServiceblance.columns">
	<![CDATA[
		t_client_serviceblance.id ,
		t_client_serviceblance.fcontractno ,
		t_client_serviceblance.balanceDate ,
		t_client_serviceblance.serviceHeader ,
		t_client_serviceblance.serviceFee ,
		t_client_serviceblance.payfee ,
		t_client_serviceblance.createaUserId ,
		t_client_serviceblance.createUserName ,
		t_client_serviceblance.createDate ,
		t_client_serviceblance.forderno
	]]>
</sql>

<insert id="ClientServiceblance.insert" >
	<![CDATA[
	INSERT INTO t_client_serviceblance (
		fcontractno,
		balanceDate,
		serviceHeader,
		serviceFee,
		payfee,
		createaUserId,
		createUserName,
		createDate,
		forderno
	) VALUES (
		#fcontractno#,
		#balanceDate#,
		#serviceHeader#,
		#serviceFee#,
		#payfee#,
		#createaUserId#,
		#createUserName#,
		#createDate#,
		#forderno#
	)
	]]>
	
	<!-- < selectKey> 来支持主键自动生成  -->
	<!-- resultClass="java.lang.Long" 定义返回类型   -->
	<!-- keyProperty="Id" 定义了主键名称   -->
	<!-- select @@identity  得到上一次插入记录时自动产生的ID -->
	
	<selectKey resultClass="java.lang.Long" type="post" keyProperty="id" >
		SELECT  @@identity  AS  ID
	</selectKey>
</insert>

<update id="ClientServiceblance.update" parameterClass="com.terrence.crm.dol.bean.ClientServiceblance"> 
	UPDATE t_client_serviceblance 
	<dynamic prepend="SET">
		<isNotEmpty prepend="," property="fcontractno">
			fcontractno = #fcontractno# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="balanceDate">
			balanceDate = #balanceDate# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="serviceHeader">
			serviceHeader = #serviceHeader# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="serviceFee">
			serviceFee = #serviceFee# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="payfee">
			payfee = #payfee# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="createaUserId">
			createaUserId = #createaUserId# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="createUserName">
			createUserName = #createUserName# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="createDate">
			createDate = #createDate# 
		</isNotEmpty>
		<isNotEmpty prepend="," property="forderno">
			forderno = #forderno# 
		</isNotEmpty>
	</dynamic>
 	WHERE id=#id# 
</update>

<sql id="ClientServiceblance.findPage.where">
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="id">
			t_client_serviceblance.id = #id# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="fcontractno">
			t_client_serviceblance.fcontractno = #fcontractno# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="balanceDate">
			t_client_serviceblance.balanceDate = #balanceDate# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="serviceHeader">
			t_client_serviceblance.serviceHeader = #serviceHeader# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="serviceFee">
			t_client_serviceblance.serviceFee = #serviceFee# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="payfee">
			t_client_serviceblance.payfee = #payfee# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="createaUserId">
			t_client_serviceblance.createaUserId = #createaUserId# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="createUserName">
			t_client_serviceblance.createUserName = #createUserName# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="createDate">
			t_client_serviceblance.createDate = #createDate# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="forderno">
			t_client_serviceblance.forderno = #forderno# 
		</isNotEmpty>
	</dynamic>
</sql>

<sql id="ClientServiceblance.findPage.and">
	<isNotEmpty prepend="AND" property="id">
		t_client_serviceblance.id = #id# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="fcontractno">
		t_client_serviceblance.fcontractno = #fcontractno# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="balanceDate">
		t_client_serviceblance.balanceDate = #balanceDate# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="serviceHeader">
		t_client_serviceblance.serviceHeader = #serviceHeader# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="serviceFee">
		t_client_serviceblance.serviceFee = #serviceFee# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="payfee">
		t_client_serviceblance.payfee = #payfee# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="createaUserId">
		t_client_serviceblance.createaUserId = #createaUserId# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="createUserName">
		t_client_serviceblance.createUserName = #createUserName# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="createDate">
		t_client_serviceblance.createDate = #createDate# 
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="forderno">
		t_client_serviceblance.forderno = #forderno# 
	</isNotEmpty>
</sql>

<select id="ClientServiceblance.getById" resultMap="RM.ClientServiceblance">
	select <include refid="ClientServiceblance.columns"/> from t_client_serviceblance where id=#id#
</select>

<select id="ClientServiceblance.getByProperty" resultMap="RM.ClientServiceblance">
	select <include refid="ClientServiceblance.columns"/> from t_client_serviceblance where $propertyName$=#propertyValue#
</select>

<delete id="ClientServiceblance.delete">
	<![CDATA[
		DELETE FROM t_client_serviceblance WHERE id=#id#
	]]>
</delete>
<delete id="ClientServiceblance.deleteMultiple">
	<![CDATA[
		DELETE FROM t_client_serviceblance WHERE id in ($id$)
	]]>
</delete>

<select id="ClientServiceblance.findPage.count" resultClass="long">
	select count(*) from t_client_serviceblance <include refid="ClientServiceblance.findPage.where"/>
</select>

<select id="ClientServiceblance.findPage" resultMap="RM.ClientServiceblance">
	select <include refid="ClientServiceblance.columns"/> 
		from t_client_serviceblance 
 		where 1=1
	<isNotEmpty property="notTop">  
		and id not in(
			select $notTop$ id from t_client_serviceblance <include refid="ClientServiceblance.findPage.where"/>
			<isNotEmpty property="sortColumns"> 
				ORDER BY $sortColumns$
			</isNotEmpty> 
		)
	</isNotEmpty> 
	<include refid="ClientServiceblance.findPage.and"/>
	<isNotEmpty property="sortColumns">
		ORDER BY $sortColumns$
	</isNotEmpty>
</select>

<select id="ClientServiceblance.findList" resultMap="RM.ClientServiceblance">
	SELECT <include refid="ClientServiceblance.columns"/> FROM t_client_serviceblance
	<include refid="ClientServiceblance.findPage.where"/>
	<isNotEmpty property="sortColumns">
		ORDER BY $sortColumns$
	</isNotEmpty>
</select>

</sqlMap>