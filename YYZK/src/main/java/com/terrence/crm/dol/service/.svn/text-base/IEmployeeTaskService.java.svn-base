package com.terrence.crm.dol.service;
import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.EmpTaskVo;
import com.terrence.crm.dol.bean.EmployeeTask;
import com.terrence.crm.dol.query.EmployeeTaskQuery;
public interface IEmployeeTaskService
{
	public EmployeeTask getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(EmployeeTask entity) throws ServiceException;
	
	public java.lang.Long save(EmployeeTask entity) throws ServiceException;
	
	public Integer update(EmployeeTask entity) throws ServiceException;
	
	public Integer updateStatus(EmployeeTask entity)throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<EmployeeTask> findPage(Page<EmployeeTask> page, EmployeeTaskQuery query) throws ServiceException;
	
	public List<EmployeeTask> findList(EmployeeTaskQuery query) throws ServiceException;
	
	public List<EmployeeTask> findAllList() throws ServiceException;
	
	public EmployeeTask getMaxPlanEndDate(EmployeeTaskQuery query)throws ServiceException;
	
	public void saveTask(EmpTaskVo empTaskVo,EmployeeTask entity)throws ServiceException;
	
	public void updateTask(EmpTaskVo empTaskVo,EmployeeTask entity)throws ServiceException;
	
	public List<EmployeeTask> findList(String statemtnt,EmployeeTaskQuery query)throws ServiceException;

	public Integer findLastnum(Long employeeTaskId) throws ServiceException;

	public Page<EmployeeTask> findPage(Page<EmployeeTask> page, String statement,
			EmployeeTaskQuery employeeTaskQuery) throws ServiceException;
	/**
	 * 个人任务管理中修改任务状态
	 * @param entity
	 */
	public void updateEployStatus(EmployeeTask entity)throws ServiceException;

	public List<EmployeeTask> findEpList(EmployeeTask entity) throws ServiceException;
	/**
	 * 排产详细编辑
	 * @param entity
	 * @throws ServiceException
	 */
	public void saveOrUpdateDetail(EmployeeTask entity) throws ServiceException;

	public Integer deleteByIdcheck(Long employeeTaskId) throws ServiceException;
	/**
	 * 排产编辑删除个人任务--
	 * @param employeeTaskId
	 * @throws ServiceException
	 */
	public Integer deletedispatchById(Long employeeTaskId) throws ServiceException;
}