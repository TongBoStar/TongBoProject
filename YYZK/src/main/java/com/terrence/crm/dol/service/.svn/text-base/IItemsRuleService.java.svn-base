package com.terrence.crm.dol.service;

import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.ItemsRule;
import com.terrence.crm.dol.query.ItemsRuleQuery;

public interface IItemsRuleService {
	public ItemsRule getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(ItemsRule entity) throws ServiceException;
	
	public java.lang.Long save(ItemsRule entity) throws ServiceException;
	
	public Integer update(ItemsRule entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<ItemsRule> findPage(Page<ItemsRule> page, ItemsRuleQuery query) throws ServiceException;
	
	public Page<ItemsRule> findPage(Page<ItemsRule> page,String statement, ItemsRuleQuery query) throws ServiceException;
	
	public List<ItemsRule> findList(ItemsRuleQuery query) throws ServiceException;
	
	public List<ItemsRule> findList(ItemsRuleQuery query,Integer pageSize) throws ServiceException;
	
	public List<ItemsRule> findList(ItemsRuleQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<ItemsRule> findAllList() throws ServiceException;

	public void saveall(ItemsRule entity)throws ServiceException;

	public void deleteAlone(ItemsRuleQuery itemRuleQuery)throws ServiceException;

	public List<ItemsRule> findListDetail(ItemsRuleQuery itemRuleQuery)throws ServiceException;

	public List<ItemsRule> findListitemDetail(ItemsRuleQuery itemRuleQuery) throws ServiceException;

	public ItemsRule finditemDetail(ItemsRuleQuery itemRuleQuery) throws ServiceException;
	
	
}
