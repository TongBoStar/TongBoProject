package com.terrence.crm.dol.service;

import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.BaseItem;
import com.terrence.crm.dol.query.BaseItemQuery;

public interface IBaseItemService {
/*	public void syncK3ItemDetail() throws ServiceException;
	public void SyncBaseItem();
	public Integer deleteInfoByItemcode(String itemcode) throws ServiceException;*/
	public BaseItem getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(BaseItem entity) throws ServiceException;
	
	public java.lang.Long save(BaseItem entity) throws ServiceException;
	
	public Integer update(BaseItem entity) throws ServiceException;
	
	public Integer update(String statement,BaseItem entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<BaseItem> findPage(Page<BaseItem> page, BaseItemQuery query) throws ServiceException;
	
	public List<BaseItem> findList(BaseItemQuery query) throws ServiceException;
	
	public List<BaseItem> findList(String statement,BaseItemQuery query) throws ServiceException;
	
	public List<BaseItem> findAllList() throws ServiceException;
	
	public Page<BaseItem> findPage(Page<BaseItem> page,String statement,BaseItemQuery query)throws ServiceException;
	
	public BaseItem getByProperty(String propertyName,Object propertyValue)throws ServiceException;
	
	/**
	 * 导入xls数据
	 * @param xlsfile
	 * @return
	 * @throws ServiceException
	 */
	public Integer saveOrUpdateXlsData(String xlsfile)throws ServiceException;
	//----------------
	public int saveIte(BaseItem entity,BaseItemQuery query) throws ServiceException;
	
	
	public void saveBaseItem()throws ServiceException;
	
	

	public void updateItemName();



	public void saveOrUpdateItemXlsData(String xlsfile);

	public String findAllitemXls(String realPath, BaseItemQuery baseItemQuery);
	/**
	 * 
	 * @throws Exception
	 */
	public void updateItem()throws Exception;
	
	public void updatewfstauts(BaseItem entity) throws ServiceException;
    
	/**2013-8-10 批量修改
	 * @param entity **/

	public Integer updateById(BaseItem entity) throws ServiceException;

	//public void updatecheckwfstauts(BaseItem entity) throws ServiceException;

	public List<BaseItem> findList(BaseItemQuery baseItemQuery, Integer pageSize) throws ServiceException;

	//public void updatePosition(BaseItem entity) throws ServiceException;

	public BaseItem getByIdBaseItem(Long baseItemId) throws ServiceException;

	public void saveANDupdate(BaseItem entity)throws ServiceException;

	public void updateBaseItemById(BaseItem entity) throws ServiceException;

	public BaseItem findBaseItemList(Long baseItemId) throws ServiceException;

	public void updateBaseItemBangById(BaseItem entity) throws ServiceException;

	public void saveSolution(BaseItem entity) throws ServiceException;

	public BaseItem getSolutionById(Long baseItemId) throws ServiceException;

	public BaseItem getByEntityVer(String string, BaseItemQuery baseItemQuery)throws ServiceException;

	//public void updateVersion(BaseItem entity)throws ServiceException;


	public List<BaseItem> finditemforPorequest(BaseItemQuery baseItemQuery) throws ServiceException;

	public BaseItem getpositionBycode(String itemcode)throws ServiceException;

	public void SyncBaseItem();

	public void updateFinspectionlevel(BaseItem entity)throws ServiceException;

	public Integer updatefinspectionlevel(BaseItem entity)throws ServiceException;

	public BaseItem findbaseguide(BaseItemQuery baseItemQuery) throws ServiceException;

	public BaseItem findInKey(BaseItemQuery baseItemQuery) throws ServiceException;

	public BaseItem getByBaseFqty(String string, BaseItemQuery baseItemQuery)throws ServiceException;

	public void updateByRpid(BaseItem entity, List<Long> checkedIdList);

	public BaseItem getByTecsn(String string, BaseItemQuery baseItemQuery)throws ServiceException;

	
	public List<BaseItem> findListv(BaseItemQuery query) throws ServiceException;
	public Integer deleteInfoById(Long id) throws ServiceException;
	public void saveOrUpdateInfo(BaseItem entity) throws ServiceException;
	/**
	 * 带K3同步操作
	 * 
	 */
	public void updateByIdWithK3(BaseItem entity) throws ServiceException;
	public String [] findItemIsinventory(BaseItem entity) throws ServiceException;
	public void syncK3ItemDetail() throws ServiceException;
	public Integer deleteInfoByItemcode(String itemcode) throws ServiceException;
	public List<BaseItem> findItemList(BaseItemQuery query) throws ServiceException;
	public String findPLMItem(String savePath,BaseItemQuery baseItemQuery) throws ServiceException;
	public String   exportItemPLMItem(BaseItem entity,String savePath) throws Exception;
	public List<BaseItem> finditemforTakeStock(BaseItemQuery baseItemQuery) throws ServiceException ;
	public List<BaseItem> getBaseItemCallslip(BaseItemQuery bQuery) throws ServiceException ;
	
	public List<BaseItem> findBaseItemPorequest(BaseItemQuery bQuery) throws ServiceException ;
	public List<BaseItem> findBaseItemPoorder(BaseItemQuery bQuery) throws ServiceException ;

	public List<BaseItem> listItemInfo(BaseItemQuery baseItemQuery) throws ServiceException ;

	public BaseItem getItemInfoByFNumber(String itemcode) throws ServiceException ;
	public List<BaseItem> findBaseItemSeoutstock(BaseItemQuery baseItemQuery) throws ServiceException ;
	public BaseItem finditemforStoreRoom(BaseItemQuery baseItemQuery) throws ServiceException ;
	public void updatecheckwfstauts(BaseItem entity) throws ServiceException;
	
	public List<BaseItem> findDifferentItems() throws ServiceException ;

	public void updateVersion(BaseItem entity)throws ServiceException;
}
