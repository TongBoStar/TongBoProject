package com.terrence.crm.dol.service.impl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.apache.commons.lang.StringUtils;
import org.springframework.transaction.annotation.Transactional;
import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.ManualBomdif;
import com.terrence.crm.dol.dao.IManualBomdifDao;
import com.terrence.crm.dol.query.ManualBomdifQuery;
import com.terrence.crm.dol.service.IManualBomdifService;
@Service
@Transactional
public class ManualBomdifService implements IManualBomdifService {
	@Autowired
	@Qualifier("manualBomdifDao")
	private IManualBomdifDao manualBomdifDao;
	@Override
	public ManualBomdif getById(Long id) throws ServiceException {
		return manualBomdifDao.getById(id);
	}
	@Override
	public void saveOrUpdate(ManualBomdif entity) throws ServiceException {
		manualBomdifDao.saveOrUpdate(entity);
	}
	@Override
	public Long save(ManualBomdif entity) throws ServiceException {
		return manualBomdifDao.save(entity);
	}
	@Override
	public Integer update(ManualBomdif entity) throws ServiceException {
		return manualBomdifDao.update(entity);
	}
	@Override
	public Integer deleteById(Long id) throws ServiceException {
		return manualBomdifDao.deleteById(id);
	}
	@Override
	public Integer deleteByMultipleId(List<Long> idList) throws ServiceException {
		String delIds = StringUtils.join(idList, ",");
		Integer returnValue = manualBomdifDao.deleteByMultipleId(delIds);
		return returnValue;
	}
	@Transactional(readOnly=true)
	public Page<ManualBomdif> findPage(Page<ManualBomdif> page, ManualBomdifQuery query) throws ServiceException{
		return manualBomdifDao.findPage(page, query);
	}
	@Transactional(readOnly=true)
	public Page<ManualBomdif> findPage(Page<ManualBomdif> page,String statement, ManualBomdifQuery query) throws ServiceException{
		return manualBomdifDao.findPage(page,statement, query);
	}
	@Transactional(readOnly=true)
	public List<ManualBomdif> findList(ManualBomdifQuery query) throws ServiceException{
		return manualBomdifDao.findList(query);
	}
	@Transactional(readOnly=true)
	public List<ManualBomdif> findList(ManualBomdifQuery query,Integer pageSize) throws ServiceException{
		return manualBomdifDao.findList(query,pageSize);
	}
	@Transactional(readOnly=true)
	public List<ManualBomdif> findList(ManualBomdifQuery query,String statement,Integer pageSize) throws ServiceException{
		return manualBomdifDao.findList(query,statement,pageSize);
	}
	@Transactional(readOnly=true)
	public List<ManualBomdif> findAllList() throws ServiceException{
		return manualBomdifDao.findAllList();
	}
}
