package com.terrence.crm.dol.service;
import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.FactoryReport;
import com.terrence.crm.dol.query.FactoryReportQuery;
public interface IFactoryReportService
{
	public FactoryReport getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(FactoryReport entity) throws ServiceException;
	
	public java.lang.Long save(FactoryReport entity) throws ServiceException;
	
	public Integer update(FactoryReport entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<FactoryReport> findPage(Page<FactoryReport> page, FactoryReportQuery query) throws ServiceException;
	
	public Page<FactoryReport> findPage(Page<FactoryReport> page,String statement, FactoryReportQuery query) throws ServiceException;
	
	public List<FactoryReport> findList(FactoryReportQuery query) throws ServiceException;
	
	public List<FactoryReport> findList(FactoryReportQuery query,Integer pageSize) throws ServiceException;
	
	public List<FactoryReport> findList(FactoryReportQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<FactoryReport> findAllList() throws ServiceException;

	public void saveOrUpdateReport(FactoryReport entity) throws ServiceException;


	public FactoryReport getByEntity(String string,
			FactoryReportQuery factoryReportQuery)throws ServiceException;


	public FactoryReport findvalve(FactoryReportQuery factoryReportQuery) throws ServiceException;

	public FactoryReport findentity(FactoryReportQuery factoryReportQuery) throws ServiceException;

	
	
}