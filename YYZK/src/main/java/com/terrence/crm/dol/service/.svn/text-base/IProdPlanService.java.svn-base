package com.terrence.crm.dol.service;
import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.PlanDetailView;
import com.terrence.crm.dol.bean.ProPlanDetailVo;
import com.terrence.crm.dol.bean.ProdPlan;
import com.terrence.crm.dol.query.ProdPlanQuery;
public interface IProdPlanService
{
	public ProdPlan getById(java.lang.Long id) throws ServiceException;
	
	public ProdPlan getById(String statement,java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(ProdPlan entity) throws ServiceException;
	
	public void saveOrPlan(ProdPlan entity,PlanDetailView planDetail) throws ServiceException;
	/**
	 * 审核
	 * @param proPlanDetailVo
	 * @throws ServiceException
	 */
	public void updateCheck(ProPlanDetailVo proPlanDetailVo)throws ServiceException;
	/**
	 * 下推装配任务
	 * @param proPlanDetailVo
	 * @throws ServiceException
	 */
	public void updatePushAssemblyTask(ProPlanDetailVo proPlanDetailVo)throws ServiceException;
	
	public java.lang.Long save(ProdPlan entity) throws ServiceException;
	
	public Integer update(ProdPlan entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<ProdPlan> findPage(Page<ProdPlan> page, ProdPlanQuery query) throws ServiceException;
	
	public Page<ProdPlan> findPage(Page<ProdPlan> page,String statement, ProdPlanQuery query) throws ServiceException;
	
	public List<ProdPlan> findList(ProdPlanQuery query) throws ServiceException;
	
	public List<ProdPlan> findList(ProdPlanQuery query,Integer pageSize) throws ServiceException;
	
	public List<ProdPlan> findList(ProdPlanQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<ProdPlan> findAllList() throws ServiceException;

	public void saveProdPlan(ProPlanDetailVo proPlanDetailVo, ProdPlan entity);

	public void deleteplandetail(Long plandetailid,int dbno);

	public void updateStatus(ProdPlan entity);

	public void updatedetailStatus(ProdPlan entity);

	public void updatedel(List<Long> checkedIdList) throws ServiceException;

	public ProdPlan findprodentity(ProdPlanQuery prodPlanQuery) throws ServiceException;
	
	
}