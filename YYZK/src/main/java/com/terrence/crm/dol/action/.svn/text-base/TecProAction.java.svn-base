/*
 * 
 */
package com.terrence.crm.dol.action;


import javax.servlet.http.HttpServletRequest;
import org.apache.struts2.components.ActionMessage;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.annotation.Scope;

import java.util.ArrayList;
import java.util.List;
import com.terrence.crm.dol.base.CrudActionSupport;
import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.base.utils.Struts2Utils;
import com.terrence.crm.dol.service.ITecProService;
import com.terrence.crm.dol.utils.CacheService;
import com.terrence.crm.dol.bean.TecPro;
import com.terrence.crm.dol.bean.Tools;
import com.terrence.crm.dol.query.TecProQuery;
import com.terrence.crm.dol.query.ToolsQuery;

/**
 * 
 * 
 * @version 1.0
 */
@Scope("prototype")
@Namespace("/tecPro")
@Results( { @Result(name = CrudActionSupport.RELOAD, location = "tecPro." + CrudActionSupport.ACTIONSUFFIX + "?page.pageRequest=${page.pageRequest}", type = "redirect")})
public class TecProAction extends CrudActionSupport<TecPro>  implements ApplicationContextAware{
	
	private String TECPROKEY="tecpro";
	@Autowired
	@Qualifier("tecProService")
	private ITecProService tecProService;
	
	
	private TecPro entity;

	private TecProQuery tecProQuery;
	
	
	private java.lang.Long tecProId;
	
	/** 分页器 */
	private Page<TecPro> page = new Page<TecPro>();
	
	/** Json操作信息 */
	private String[] resultInfo = new String[2];
	
	/** 所选择的编号列表 */
	private List<java.lang.Long> checkedIdList;
	
	
	private ApplicationContext ctx;
	
	private List<TecPro> tecProList;
	private String tree="";
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#prepareModel()
	 */
	@Override
	protected void prepareModel() throws Exception {
		if (tecProId != null ) {
			entity = tecProService.getById(tecProId);
		} else {
			entity = new TecPro();
		}
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#delete()
	 */
	@Override
	public String delete() throws Exception {
		
		try {
			if(tecProService.deleteByMultipleId(checkedIdList)==1){
				
				resultInfo[0] = "0";
				resultInfo[1] = "删除成功";
			//	updateTreeCache();
				addActionMessage("删除成功");	
			}else{
				resultInfo[0] = "-1";
				resultInfo[1] = "不能删除包含子数据的节点";
			}
			
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "删除失败";
			
			addActionMessage("删除失败");
		}
		return RELOAD;
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#deleteToJson()
	 */
	public String deleteToJson() throws Exception {
		
		try {
			delete();
			
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "删除失败";
		}
		return JSON;
	}

	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#input()
	 */
	@Override
	public String input() throws Exception {
		return INPUT;
	}
	
	public String listToQuery()throws Exception
	{
		if(tecProQuery == null) {
			tecProQuery = new TecProQuery();
		}
		
		try {
			tecProList = tecProService.findList(tecProQuery);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#list()
	 */
	@Override
	public String list() throws Exception {
		if (!page.isOrderBySetted()) {
			page.setOrderBy("tecProId");
			page.setOrder(Page.DESC);
		}
		if(tecProQuery == null) {
			tecProQuery = new TecProQuery();
		}
		
		try {
			page = tecProService.findPage(page, tecProQuery);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return SUCCESS;
	}
	
	public String listToJson() throws Exception {
		
		try {
			list();			
		} catch(Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}

	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#save()
	 */
	@Override
	public String save() throws Exception {
		
		try {
			tecProService.saveOrUpdate(entity);
			//updateTreeCache();
			resultInfo[0] = "0";
			resultInfo[1] = "操作成功";
			
			addActionMessage("操作成功");
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
			
			addActionMessage("操作失败");
			return INPUT;
		}
		return RELOAD;
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#saveToJson()
	 */
	public String saveToJson() throws Exception {
		
		try {
			save();
				
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
		}
		return JSON;
	}

	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#show()
	 */
	@Override
	public String show() throws Exception {
		
		try {
			entity = tecProService.getById(tecProId);
			
			resultInfo[0] = "0";
			resultInfo[1] = "查询成功";
		} catch(ServiceException e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return SHOW;
	}
	
	/* (non-Javadoc)
	 * @see com.disney.dol.base.CrudActionSupport#showToJson()
	 */
	public String showToJson() throws Exception {
		
		try {
			show();
		} catch(Exception e) {
			logger.error(e.getMessage());
			resultInfo[0] = "-1";
			resultInfo[1] = "查询失败";
		}
		return JSON;
	}

	
	// -------------------自定义方法

	public String listToTree()throws Exception
	{
		if(tecProQuery == null) {
			tecProQuery = new TecProQuery();
		}
		try
		{
			tecProQuery.setParentproid(-1l);
				List<TecPro> list=tecProService.findList(tecProQuery);
				tecProList=new ArrayList<TecPro>();
				for(TecPro tecPro:list)
				{
					tree+="<li><a href=\"javascript:;\" onclick=\"setprocontent("+tecPro.getProid()+",'"+tecPro.getProcontent()+"');\">"+tecPro.getProcontent()+"</a>"+loop(tecPro)+"</li>";
				}
		
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	}
/*	public String updateTreeCache()throws Exception
	{

		if(tecProQuery == null) {
			tecProQuery = new TecProQuery();
		}
		try
		{
			tecProQuery.setParentproid(-1l);
				List<TecPro> list=tecProService.findList(tecProQuery);
				tecProList=new ArrayList<TecPro>();
				for(TecPro tecPro:list)
				{
					tree+="<li><a href=\"javascript:;\" onclick=\"setprocontent("+tecPro.getProid()+",'"+tecPro.getProcontent()+"');\">"+tecPro.getProcontent()+"</a>"+loop(tecPro)+"</li>";
				}
				CacheService.getInstance().replace(TECPROKEY, tree);
		
			resultInfo[0] = "0";
			resultInfo[1] = "查询列表成功";
		} catch (Exception e) {
			logger.error(e.getMessage());
			
			resultInfo[0] = "-1";
			resultInfo[1] = "查询列表失败";
		}
		return JSON;
	
	}*/
	public String loop(TecPro tecPro)
	{
		TecProQuery tecProQuery=null;
		tecProQuery=new TecProQuery();
		tecProQuery.setParentproid(tecPro.getProid());
		List<TecPro> list=tecProService.findList(tecProQuery);
		StringBuffer sbuf=new StringBuffer();
		if(list.size()>0)
		{
			sbuf.append("<ul id=\"ul"+tecPro.getProid()+"\">");
			for(TecPro tp:list)
			{
				sbuf.append("<li id=\"li"+tp.getProid()+"\" ><a  href=\"javascript:;\" onclick=\"setprocontent("+tp.getProid()+",'"+tp.getProcontent()+"');\">"+tp.getProcontent()+"</a>"+loop(tp)+"</li>");
			}
			sbuf.append("</ul>");
		}
		return sbuf.toString();
	}
	//----------
	public String listAll() throws Exception {
		try{
			tecProList = tecProService.findAllList();
			resultInfo[0] = "0";
			resultInfo[1] = "操作成功";
		} catch(ServiceException e){
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = e.getMessage();
		} catch(Exception e){
			logger.warn("param error ", e);
			resultInfo[0] = "-1";
			resultInfo[1] = "操作失败";
		}	
		
		return JSON;
	}
	
	// -------------------自定义方法
	/* (non-Javadoc)
	 * @see com.opensymphony.xwork2.ModelDriven#getModel()
	 */
	public TecPro getModel() {
		return entity;
	}

	/**
	 * 
	 *
	 * @return the lottery query
	 */
	public TecProQuery getTecProQuery() {
		return tecProQuery;
	}

	
	public void setTecProQuery(TecProQuery tecProQuery) {
		this.tecProQuery = tecProQuery;
	}

	public void setTecProId(java.lang.Long tecProId) {
		this.tecProId = tecProId;
	}
	
	
	public java.lang.Long getTecProId() {
		return this.tecProId;
	}

	/**
	 * 获得分页器
	 *
	 * @return the page
	 */
	public Page<TecPro> getPage() {
		return page;
	}

	/**
	 * 设置分页器
	 *
	 * @param page the new page
	 */
	public void setPage(Page<TecPro> page) {
		this.page = page;
	}
	
	/**
	 * 获得Json操作信息
	 *
	 * @return the result info
	 */
	public String[] getResultInfo() {
		return resultInfo;
	}

	/**
	 * 获得所选择的编号列表
	 *
	 * @return 编号列表
	 */
	public List<java.lang.Long> getCheckedIdList() {
		return checkedIdList;
	}

	/**
	 * 设置编号列表
	 *
	 * @param checkedIdList 编号列表
	 */
	public void setCheckedIdList(List<java.lang.Long> checkedIdList) {
		this.checkedIdList = checkedIdList;
	}
	

	public void setApplicationContext(ApplicationContext ctx)
		throws BeansException {
	this.ctx = ctx;
	}

	public List<TecPro> getTecProList() {
		return tecProList;
	}

	public String getTree() {
		return tree;
	}

	public void setTree(String tree) {
		this.tree = tree;
	}
	
	
}
