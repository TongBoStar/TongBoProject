package com.terrence.crm.dol.service;
import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.Porequest;
import com.terrence.crm.dol.bean.ProcessExetask;
import com.terrence.crm.dol.query.PorequestQuery;


public interface IPorequestService
{
	public Porequest getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(Porequest entity) throws ServiceException;
	
	public java.lang.Long save(Porequest entity) throws ServiceException;
	
	public Integer update(Porequest entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<Porequest> findPage(Page<Porequest> page, PorequestQuery query) throws ServiceException;
	
	public Page<Porequest> findPage(Page<Porequest> page,String statement, PorequestQuery query) throws ServiceException;
	
	public List<Porequest> findList(PorequestQuery query) throws ServiceException;
	
	public List<Porequest> findList(PorequestQuery query,Integer pageSize) throws ServiceException;
	
	public List<Porequest> findList(PorequestQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<Porequest> findAllList() throws ServiceException;

	public Porequest findPQDetail(PorequestQuery porequestQuery) throws ServiceException;

	public void updateforPoAudit(List<Long> checkedIdList, Porequest porequest) throws ServiceException;

	public List<Porequest> findListaudit(List<Long> checkedIdList) throws ServiceException;

	public Porequest findPQtasks(PorequestQuery porequestQuery) throws ServiceException;

	public void updateforPoUNAudit(List<Long> checkedIdList, Porequest porequest) throws ServiceException;

	public void updateforclose(List<Long> checkedIdList, Porequest porequest) throws ServiceException;

	public void updateforUNclose(List<Long> checkedIdList, Porequest porequest) throws ServiceException;

	public Porequest findDetil(Long porequestId) throws ServiceException;

	public void updatedetailstatus(Porequest entity) throws ServiceException;

	public void updateforbatch(List<Long> checkedIdList, Porequest porequest) throws ServiceException;

	public void updateRejected(List<Long> checkedIdList, Porequest porequest) throws ServiceException;

	public Porequest findPorequestEntity(PorequestQuery porequestQuery)  throws ServiceException;

	public void updateStatuts(Porequest entity) throws ServiceException;

	public void updateStatutsAll(List<Long> checkedIdList) throws ServiceException;

	public void exeProcess(Porequest entity, ProcessExetask processExetask);

	
	
}