<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Province">

        
	<resultMap id="RM.Province" class="com.terrence.crm.dol.bean.Province">
        <result property="provinceid" column="provinceid"/>
        <result property="provincename" column="provincename"/>
        <result property="areaid" column="areaid"/>
        
        <result property="fitemid" column="fitemid"/>
        <result property="fnumber" column="fnumber"/>
    </resultMap>
	<resultMap id="RM.Province.Area" class="com.terrence.crm.dol.bean.Province">
        <result property="provinceid" column="provinceid"/>
        <result property="provincename" column="provincename"/>
        <result property="areaid" column="areaid"/>
        <result property="area" resultMap="Province.Area"/>
        
          <result property="fitemid" column="fitemid"/>
        <result property="fnumber" column="fnumber"/>
    </resultMap>
	<resultMap class="com.terrence.crm.dol.bean.Area" id="Province.Area">
		<result property="areaname" column="areaname"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Province.columns">
	    <![CDATA[
        	t_province.provinceid ,
        	t_province.provincename ,
        	t_province.areaid ,
        	t_province.fitemid,
        	t_province.fnumber
	    ]]>
	</sql>
	
   <insert id="Province.insert" >
    <![CDATA[
        INSERT INTO
        t_province (
        	provincename ,
        	areaid,
        	fitemid,
        	fnumber
        ) VALUES (
        	#provincename# ,
        	#areaid#,
        	#fitemid#,
        	#fnumber#
 
        )
    ]]> 
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="provinceid" >
            SELECT  @@identity  AS  ID
        </selectKey>
    </insert>

	<update id="Province.update" parameterClass="com.terrence.crm.dol.bean.Province">         
        UPDATE t_province 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="provincename">
	        	provincename = #provincename# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="areaid">
	        	areaid = #areaid# 
	        </isNotEmpty>
	        
	         <isNotEmpty prepend="," property="fitemid">
	        	fitemid = #fitemid# 
	        </isNotEmpty>
	         <isNotEmpty prepend="," property="fnumber">
	        	fnumber = #fnumber# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        provinceid = #provinceid# 
    </update>
    
    <update id="Province.updateProvince" parameterClass="com.terrence.crm.dol.bean.Province">         
        UPDATE t_province 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="groupid">
	        	groupid = #groupid# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        provinceid  in ($idss$) 
    </update>
    
    <update id="Province.update.findempty" parameterClass="com.terrence.crm.dol.query.ProvinceQuery">         
        UPDATE t_province 
        <dynamic prepend="SET">
	        	groupid = null 
	       
	    </dynamic>
        WHERE 
	        provinceid  in ($idss$) 
    </update>
	<delete id="Province.delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from t_province where
       provinceid = #provinceid# 
    ]]>
    </delete>
    
    <delete id="Province.deleteMultiple">
    <![CDATA[
        DELETE FROM 
        	t_province 
        WHERE
       provinceid in ($provinceid$) 
    ]]>
    </delete>
    
    <select id="Province.getById" resultMap="RM.Province">
	    select <include refid="Province.columns"/>
	    
	        from t_province 
	        where 
		        provinceid = #provinceid# 
	    
    </select>
    
	<select id="Province.getByProperty" resultMap="RM.Province">
		select <include refid="Province.columns"/> from t_province where $propertyName$=#propertyValue#
	</select>
	
	<sql id="Province.findPage.where">
	    <dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="provinceid">
	             t_province.provinceid = #provinceid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="provincename">
	             t_province.provincename like ('%$provincename$%')
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="areaid">
	             t_province.areaid = #areaid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="area.areaname">
	             t_area.areaname like ('%$area.areaname$%')
	       </isNotEmpty>
	       
	         <isNotEmpty prepend="AND" property="fitemid">
	        	t_province.fitemid = #fitemid# 
	        </isNotEmpty>
	         <isNotEmpty prepend="AND" property="fnumber">
	        	t_province.fnumber = #fnumber# 
	        </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <sql id="Province.findPage.and">
			<isNotEmpty prepend="AND" property="provinceid">
	             t_province.provinceid = #provinceid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="provincename">
	             t_province.provincename like ('%$provincename$%')
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="areaid">
	             t_province.areaid = #areaid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="area.areaname">
	             t_area.areaname like ('%$area.areaname$%')
	       </isNotEmpty>
	        <isNotEmpty prepend="AND" property="fitemid">
	        	t_province.fitemid = #fitemid# 
	        </isNotEmpty>
	         <isNotEmpty prepend="AND" property="fnumber">
	        	t_province.fnumber = #fnumber# 
	        </isNotEmpty>
	</sql>
    
    <select id="Province.findList" resultMap="RM.Province">
    	SELECT 
    		<include refid="Province.columns"/>
    	FROM 
    		t_province 
		<include refid="Province.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    
    <select id="Province.findPage.count" resultClass="long">
    <![CDATA[
        select 
        count(*)
        from t_province left join t_area on t_province.areaid=t_area.areaid
    ]]>
		<include refid="Province.findPage.where"/>    
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Sql.Province.findPage" resultMap="RM.Province">
    	select <include refid="Province.columns"/>	    
	        from t_province 	   
		<include refid="Province.findPage.where"/>		
		<isNotEmpty property="sortColumns">ORDER BY $sortColumns$</isNotEmpty>
		
    </select>
    
	<select id="Province.findPage" resultMap="RM.Province.Area">
    	select <include refid="Province.columns"/>,t_area.areaname	    
	        from t_province left join t_area on t_province.areaid=t_area.areaid where 1=1 
	   <isNotEmpty property="notTop">  and 
       provinceid 
	   not in(select $notTop$ 
       provinceid 
	   from t_province left join t_area on t_province.areaid=t_area.areaid <include refid="Province.findPage.where"/>
	   	   <isNotEmpty property="sortColumns"> ORDER BY $sortColumns$	</isNotEmpty>) 
	   	</isNotEmpty>    
	   	<include refid="Province.findPage.and"/>
    	<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
	
		
    </select>
    
    
    <select id="Province.findProList.for.data" resultMap="RM.Province">
    	SELECT 
    		<include refid="Province.columns"/>
    	FROM 
    		t_province 
		<include refid="Province.findPage.where"/>
		
    </select>
    
    
    <procedure id="Province.for.ERP.data">
    	{call pro_provinceERPData()}
    </procedure>
	
</sqlMap>
