package com.terrence.crm.dol.bean;
import java.util.List;

import javax.persistence.Entity;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import com.terrence.crm.dol.base.BaseEntity;
import com.terrence.crm.dol.utils.DateConvertUtils;

@Entity
public class ProcessDetail extends BaseEntity implements java.io.Serializable {
	/**
	 * 序列化ID
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * 唯一标识
	 */
	private Long id;
	/**
	 * 流程Id
	 */
	private Long processId;
	/**
	 * 节点名称
	 */
	private String nodeName;
	/**
	 * 1、审批节点 2、分发节点
	 */
	private Integer nodeSeq;
	/**
	 * 节点类型
	 */
	private Integer nodeType;
	/**
	 * 处理人，用于接收前端传过来的数据
	 */
	private String handlers;
	/**
	 * 分发的部门，用于接收前端传过来的数据
	 */
	private String dispatchdeps;
	/**
	 * 节点处理列表
	 */
	private List<ProcessHandle> processHandleList;
	public Long getId(){
		return this.id;
	}
	public void setId(Long id){
		this.id=id;
	}
	public Long getProcessId(){
		return this.processId;
	}
	public void setProcessId(Long processId){
		this.processId=processId;
	}
	public String getNodeName(){
		return this.nodeName;
	}
	public void setNodeName(String nodeName){
		this.nodeName=nodeName;
	}
	public Integer getNodeSeq(){
		return this.nodeSeq;
	}
	public void setNodeSeq(Integer nodeSeq){
		this.nodeSeq=nodeSeq;
	}
	public Integer getNodeType(){
		return this.nodeType;
	}
	public void setNodeType(Integer nodeType){
		this.nodeType=nodeType;
	}
	public String getHandlers() {
		return handlers;
	}
	public void setHandlers(String handlers) {
		this.handlers = handlers;
	}
	public String getDispatchdeps() {
		return dispatchdeps;
	}
	public void setDispatchdeps(String dispatchdeps) {
		this.dispatchdeps = dispatchdeps;
	}
	public List<ProcessHandle> getProcessHandleList() {
		return processHandleList;
	}
	public void setProcessHandleList(List<ProcessHandle> processHandleList) {
		this.processHandleList = processHandleList;
	}
	public String toString() {
		return new ToStringBuilder(this)
			.append("Id",getId())
			.append("ProcessId",getProcessId())
			.append("NodeName",getNodeName())
			.append("NodeSeq",getNodeSeq())
			.append("NodeType",getNodeType())
			.toString();
		}
	public int hashCode() {
		return new HashCodeBuilder()
			.append(getId())
			.append(getProcessId())
			.append(getNodeName())
			.append(getNodeSeq())
			.append(getNodeType())
			.toHashCode();
		}
	public boolean equals(Object obj) {
		if(obj instanceof ProcessDetail == false) return false;
		if(this == obj) return true;
		ProcessDetail other = (ProcessDetail)obj;
		return new EqualsBuilder()
			.append(getId(),other.getId())
			.append(getProcessId(),other.getProcessId())
			.append(getNodeName(),other.getNodeName())
			.append(getNodeSeq(),other.getNodeSeq())
			.append(getNodeType(),other.getNodeType())
			.isEquals();
		}

}
