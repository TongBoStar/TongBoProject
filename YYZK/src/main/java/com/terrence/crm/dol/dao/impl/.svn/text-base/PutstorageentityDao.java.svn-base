package com.terrence.crm.dol.dao.impl;




import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.terrence.crm.dol.base.BaseIbatisDao;
import com.terrence.crm.dol.bean.Putstorageentity;
import com.terrence.crm.dol.dao.IPutstorageentityDao;
import com.terrence.crm.dol.query.PutstorageentityQuery;

@Repository
public class PutstorageentityDao extends BaseIbatisDao<Putstorageentity,java.lang.Long> implements IPutstorageentityDao{

		
	public void saveOrUpdate(Putstorageentity entity) {
		if(entity.getEntityid() == null) 
			save(entity);
		else 
			update(entity);
	}
	
	public String getIbatisSqlMapNamespace() {
		
		return "Putstorageentity";
	}
	public Putstorageentity getByProperty(String propertyName, Object propertyValue) {
		Map map=new HashMap();		
		map.put("propertyName", propertyName);
		map.put("propertyValue", (String)propertyValue);
		return (Putstorageentity)this.getSqlMapClientTemplate().queryForObject("Putstorageentity.getByProperty", map);		
	}

	@Override
	public List<Putstorageentity> findputList(Putstorageentity putstorageentity) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.putList", putstorageentity);
	}

	@Override
	public void updatedataxiugai(Putstorageentity entity) {
		this.getSqlMapClientTemplate().update("Putstorageentity.update", entity);
		
	}

	@Override
	public List<Putstorageentity> findnewdata(Putstorageentity putstorageentity) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.tongbu.list", putstorageentity);
	}

	@Override
	public List<Putstorageentity> findtongbudata(Putstorageentity putentity) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.tongbudata.list", putentity);
	}

	@Override
	public Putstorageentity findPutstorageentity(
			Putstorageentity putstorageentity) {
		return (Putstorageentity) this.getSqlMapClientTemplate().queryForObject("Putstorageentity.find.delete.entity", putstorageentity);
	}

	@Override
	public List<Putstorageentity> findlistPutstorageentity(Putstorageentity put) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.listPustorageentity", put);
	}

	@Override
	public List<Putstorageentity> findListBatchno(Putstorageentity putentity) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.list.batchno", putentity);
	}

	@Override
	public List<Putstorageentity> finRreturnGoods(PutstorageentityQuery putstorageentityQuery) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.returnGoods.data", putstorageentityQuery);
	}

	@Override
	public List<Putstorageentity> findBatch(Putstorageentity putentity) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.batchno.itemcode", putentity);
	}

	@Override
	public Putstorageentity findonly(Putstorageentity putentity) {
		return (Putstorageentity) this.getSqlMapClientTemplate().queryForObject("Putstorageentity.find.only.data.putentity", putentity);
	}

	@Override
	public List<Putstorageentity> findExcelData(Putstorageentity putentity) {
		return this.getSqlMapClientTemplate().queryForList("Putstorageentity.find.excelOut.data", putentity);
	}

	@Override
	public Putstorageentity findFqtyEntity(Putstorageentity putentity) {
		return (Putstorageentity) this.getSqlMapClientTemplate().queryForObject("Putsroageentity.find.fqtyEntity.for.jijia", putentity);
	}

	@Override
	public Putstorageentity findEntity(PutstorageentityQuery putentity) {
		return (Putstorageentity) this.getSqlMapClientTemplate().queryForObject("Putstoageentity.select.fqty.sum.baseitem.data", putentity);
	}

}
