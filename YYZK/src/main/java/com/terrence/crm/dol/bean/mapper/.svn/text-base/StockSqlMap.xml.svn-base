<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Stock">

        
	<resultMap id="RM.Stock" class="com.terrence.crm.dol.bean.Stock">
        <result property="fitemid" column="fitemid"/>
        <result property="fname" column="fname" />
        <result property="fnumber" column="fnumber" />
        <result property="fparentid" column="fparentid"/>
        <result property="fshortnumber" column="fshortnumber"/>
        <result property="ftypeid" column="ftypeid"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Stock.columns">
	    <![CDATA[
        	t_stock.fitemid ,
        	t_stock.fname ,
        	t_stock.fnumber ,
        	t_stock.fparentid ,
        	t_stock.fshortnumber ,
        	t_stock.ftypeid 
	    ]]>
	</sql>
	
   <insert id="Stock.insert" >
    <![CDATA[
        INSERT INTO
        t_stock (
        	fitemid ,
        	fname ,
        	fnumber ,
        	fparentid ,
        	fshortnumber ,
        	ftypeid 
        ) VALUES (
        	#fitemid# ,
        	#fname# ,
        	#fnumber# ,
        	#fparentid# ,
        	#fshortnumber# ,
        	#ftypeid# 
        )
    ]]> 
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="fitemid" >
            SELECT  @@identity  AS  ID
        </selectKey>
    </insert>

	<update id="Stock.update" parameterClass="com.terrence.crm.dol.bean.Stock">         
        UPDATE t_stock 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="fname">
	        	fname = #fname# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fnumber">
	        	fnumber = #fnumber# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fparentid">
	        	fparentid = #fparentid# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="fshortnumber">
	        	fshortnumber = #fshortnumber# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="ftypeid">
	        	ftypeid = #ftypeid# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        fitemid = #fitemid# 
    </update>
    
	<delete id="Stock.delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from t_stock where
       fitemid = #fitemid# 
    ]]>
    </delete>
    
    <delete id="Stock.deleteMultiple">
    <![CDATA[
        DELETE FROM 
        	t_stock 
        WHERE
       fitemid in ($fitemid$) 
    ]]>
    </delete>
    
    <select id="Stock.getById" resultMap="RM.Stock">
	    select <include refid="Stock.columns"/>
	    
	        from t_stock 
	        where 
		        fitemid = #fitemid# 
	    
    </select>
    
	<select id="Stock.getByProperty" resultMap="RM.Stock">
		select <include refid="Stock.columns"/> from t_stock where $propertyName$=#propertyValue#
	</select>
	
	<sql id="Stock.findPage.where">
	    <dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="fitemid">
	             t_stock.fitemid = #fitemid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fname">
	             t_stock.fname = #fname#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fnumber">
	             t_stock.fnumber = #fnumber#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fparentid">
	             t_stock.fparentid = #fparentid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="fshortnumber">
	             t_stock.fshortnumber = #fshortnumber#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="ftypeid">
	             t_stock.ftypeid = #ftypeid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="teamid">
	             not exists(select * from t_dept_stock where teamid=#teamid# and 
    			t_dept_stock.fitemid=t_stock.fitemid)
	       </isNotEmpty>
	       
	       
	    </dynamic>	
	</sql>
	 
    <sql id="Stock.findPage.and">
			<isNotEmpty prepend="AND" property="fitemid">
	             t_stock.fitemid = #fitemid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fname">
	             t_stock.fname = #fname#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fnumber">
	             t_stock.fnumber = #fnumber#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fparentid">
	             t_stock.fparentid = #fparentid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="fshortnumber">
	             t_stock.fshortnumber = #fshortnumber#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="ftypeid">
	             t_stock.ftypeid = #ftypeid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="teamid">
	             not exists(select * from t_dept_stock where teamid=#teamid# and 
    			t_dept_stock.fitemid=t_stock.fitemid)
	       </isNotEmpty>
	</sql>
	
    <select id="Stock.Entity" resultMap="RM.Stock">
    	SELECT 	<include refid="Stock.columns"/> FROM t_stock <include refid="Stock.findPage.where"/>
    </select>
    
    <select id="Stock.findList" resultMap="RM.Stock">
    	SELECT 
    		<include refid="Stock.columns"/> 
    	FROM 
    		t_stock
		<include refid="Stock.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    
    <select id="Stock.findPage.count" resultClass="long">
    <![CDATA[
        select 
        count(*)
        from t_stock
    ]]>
		<include refid="Stock.findPage.where"/>    
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Sql.Stock.findPage" resultMap="RM.Stock">
    	select <include refid="Stock.columns"/>	    
	        from t_stock 	   
		<include refid="Stock.findPage.where"/>		
		<isNotEmpty property="sortColumns">ORDER BY $sortColumns$</isNotEmpty>
		
    </select>
    
	<select id="Stock.findPage" resultMap="RM.Stock">
    	select <include refid="Stock.columns"/>	    
	        from t_stock where 1=1 
	   <isNotEmpty property="notTop">  and 
       fitemid 
	   not in(select $notTop$ 
       fitemid 
	   from t_stock <include refid="Stock.findPage.where"/>
	   	   <isNotEmpty property="sortColumns"> ORDER BY $sortColumns$</isNotEmpty>) 
	   	</isNotEmpty>    
	   	<include refid="Stock.findPage.and"/>
    	<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
	
    </select>
    
    
    
     <select id="Stock.findlist.in.poorder" resultMap="RM.Stock"><!-- 订单列表查询库房 -->
    	SELECT 
    		<include refid="Stock.columns"/> 
    	FROM 
    		t_stock
		where 1 = 1 
		<isNotEmpty prepend="AND" property="fname">
	             t_stock.fname like ('%$fname$%')
	       </isNotEmpty>
    </select>


     <select id="Stock.findByName.inventory" resultMap="RM.Stock"><!-- 订单列表查询库房 -->
    	SELECT 
    		<include refid="Stock.columns"/> 
    	FROM 
    		t_stock
		where 1 = 1 
		<isNotEmpty prepend="AND" property="fname">
	             t_stock.fname like ('%$fname$%')
	       </isNotEmpty>
    </select>
</sqlMap>
