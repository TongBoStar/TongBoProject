<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="OrgOrggorup">

        
	<resultMap id="RM.OrgOrggorup" class="com.terrence.crm.dol.bean.OrgOrggorup">
        <result property="id" column="id"/>
        <result property="groupid" column="groupid"/>
        <result property="finnerid" column="finnerid"/>
    </resultMap>
	
	  <resultMap id="RM.Organization.OrgOrggorup" class="com.terrence.crm.dol.bean.OrgOrggorup">
        <result property="id" column="id"/>
        <result property="groupid" column="groupid"/>
        <result property="finnerid" column="finnerid"/>
        <result property="bloc" resultMap="Bloc.OrgOrggorup"/>
        <result property="area" resultMap="Area.OrgOrggorup"/>
        <result property="province" resultMap="Province.OrgOrggorup"/>
        <result property="organization" resultMap="Organization.OrgOrggorup"/>
        <result property="orggrantgroup" resultMap="Orggrantgroup.OrgOrggorup"/>
    </resultMap>
	
	<resultMap class="com.terrence.crm.dol.bean.Bloc" id="Bloc.OrgOrggorup">
		<result property="blocname" column="blocname"/>
	</resultMap>  

	<resultMap class="com.terrence.crm.dol.bean.Area" id="Area.OrgOrggorup">
		<result property="areaname" column="areaname"/>
	</resultMap>  

	<resultMap class="com.terrence.crm.dol.bean.Province" id="Province.OrgOrggorup">
		<result property="provincename" column="provincename"/>
	</resultMap> 
	
	<resultMap class="com.terrence.crm.dol.bean.Organization" id="Organization.OrgOrggorup">
		<result property="fnumber" column="fnumber"/>
		<result property="fname" column="fname"/>
	</resultMap> 
	<resultMap class="com.terrence.crm.dol.bean.Orggrantgroup" id="Orggrantgroup.OrgOrggorup">
		<result property="groupname" column="groupname"/>
		<result property="notes" column="notes"/>
	</resultMap> 
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="OrgOrggorup.columns">
	    <![CDATA[
        	t_org_orggorup.id ,
        	t_org_orggorup.groupid ,
        	t_org_orggorup.finnerid 
	    ]]>
	</sql>
	
   <insert id="OrgOrggorup.insert" >
    <![CDATA[
        INSERT INTO
        t_org_orggorup (
        	groupid ,
        	finnerid 
        ) VALUES (
        	#groupid# ,
        	#finnerid# 
        )
    ]]> 
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="id" >
            SELECT  @@identity  AS  ID
        </selectKey>
    </insert>

	<update id="OrgOrggorup.update" parameterClass="com.terrence.crm.dol.bean.OrgOrggorup">         
        UPDATE t_org_orggorup 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="groupid">
	        	groupid = #groupid# 
	        </isNotEmpty>
	        <isNotEmpty prepend="," property="finnerid">
	        	finnerid = #finnerid# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        id = #id# 
    </update>
      <update id="OrgOrggorup.updateOrgOrggorup" parameterClass="com.terrence.crm.dol.bean.OrgOrggorup">         
        UPDATE t_org_orggorup 
        <dynamic prepend="SET">
	        <isNotEmpty prepend="," property="groupid">
	        	groupid = #groupid# 
	        </isNotEmpty>
	    </dynamic>
        WHERE 
	        finnerid  in ($idss$) 
    </update>
	<delete id="OrgOrggorup.delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from t_org_orggorup where
       id = #id# 
    ]]>
    </delete>
    
    <delete id="OrgOrggorup.deleteMultiple">
    <![CDATA[
        DELETE FROM 
        	t_org_orggorup 
        WHERE
       id in ($id$) 
    ]]>
    </delete>
    
    <delete id="OrgOrggorup.deleteByFinnerid">
    <![CDATA[
        DELETE FROM 
        	t_org_orggorup  
        WHERE
       finnerid in ($finnerid$) 
    ]]>
    </delete>
    
    <select id="OrgOrggorup.getById" resultMap="RM.OrgOrggorup">
	    select <include refid="OrgOrggorup.columns"/>
	    
	        from t_org_orggorup 
	        where 
		        id = #id# 
	    
    </select>
    
	<select id="OrgOrggorup.getByProperty" resultMap="RM.OrgOrggorup">
		select <include refid="OrgOrggorup.columns"/> from t_org_orggorup where $propertyName$=#propertyValue#
	</select>
	
	<sql id="OrgOrggorup.findPage.where">
	    <dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="id">
	             t_org_orggorup.id = #id#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="groupid">
	             t_org_orggorup.groupid = #groupid#
	       </isNotEmpty>
	       
			<isNotEmpty prepend="AND" property="finnerid">
	             t_org_orggorup.finnerid = #finnerid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="orggrantgroup.groupname">
	             t_orggrantgroup.groupname = #orggrantgroup.groupname#
	       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <sql id="OrgOrggorup.findPage.and">
			<isNotEmpty prepend="AND" property="id">
	             t_org_orggorup.id = #id#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="groupid">
	             t_org_orggorup.groupid = #groupid#
	       </isNotEmpty>
			<isNotEmpty prepend="AND" property="finnerid">
	             t_org_orggorup.finnerid = #finnerid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="orggrantgroup.groupname">
	             t_orggrantgroup.groupname = #orggrantgroup.groupname#
	       </isNotEmpty>
	</sql>
    
    <select id="OrgOrggorup.findList" resultMap="RM.OrgOrggorup">
    	SELECT 
    		<include refid="OrgOrggorup.columns"/> 
    	FROM 
    		t_org_orggorup
		<include refid="OrgOrggorup.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    
    <select id="OrgOrggorup.findPage.count" resultClass="long">
    <![CDATA[
        select 
        count(*)
        from (select MAX(id)as id,finnerid,MAX(groupid) as groupid from t_org_orggorup where groupid = #groupid# group by finnerid ) as t_org_orggorup
         left join t_organization on t_org_orggorup.finnerid =  t_organization.finnerid  
	     left join t_bloc on t_organization.blocid=t_bloc.blocid 
	        					left join t_area on t_organization.areaid=t_area.areaid 
	        					left join t_province on t_organization.provinceid=t_province.provinceid
	        					left join t_orggrantgroup  on  t_org_orggorup.groupid = t_orggrantgroup.groupid
    ]]>
		<include refid="OrgOrggorup.findPage.where"/>    
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
   
    
	<select id="Sql.OrgOrggorup.findPage" resultMap="RM.OrgOrggorup">
    	select <include refid="OrgOrggorup.columns"/>	    
	        from t_org_orggorup where 1=1 
	   <isNotEmpty property="notTop">  and 
       id 
	   not in(select $notTop$ 
       id 
	   from t_org_orggorup <include refid="OrgOrggorup.findPage.where"/>
	   	   <isNotEmpty property="sortColumns"> ORDER BY $sortColumns$	</isNotEmpty>) 
	   	</isNotEmpty>    
	   	<include refid="OrgOrggorup.findPage.and"/>
    	<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
	
		
    </select>
    <select id="OrgOrggorup.findPage" resultMap="RM.Organization.OrgOrggorup">
    	select <include refid="OrgOrggorup.columns"/>,t_organization.fnumber,t_organization.fname,t_bloc.blocname,t_area.areaname,t_province.provincename,
    	t_orggrantgroup.groupname,t_orggrantgroup.notes       
	        from (select MAX(id)as id,finnerid,MAX(groupid) as groupid from t_org_orggorup <include refid="OrgOrggorup.findPage.where"/> group by finnerid ) as t_org_orggorup 
	        left join t_organization on t_org_orggorup.finnerid =  t_organization.finnerid    
	        left join t_bloc on t_organization.blocid=t_bloc.blocid 
	        					left join t_area on t_organization.areaid=t_area.areaid 
	        					left join t_province on t_organization.provinceid=t_province.provinceid
	        					left join t_orggrantgroup  on  t_org_orggorup.groupid = t_orggrantgroup.groupid
	        where 1=1 
	   <isNotEmpty property="notTop">  and 
       id 
	   not in(select $notTop$ 
       id 
	   from (select MAX(id)as id,finnerid,MAX(groupid) as groupid from t_org_orggorup <include refid="OrgOrggorup.findPage.where"/> group by finnerid ) as t_org_orggorup 
	   left join t_organization on t_org_orggorup.finnerid =  t_organization.finnerid    
	   left join t_bloc on t_organization.blocid=t_bloc.blocid 
	        					left join t_area on t_organization.areaid=t_area.areaid 
	        					left join t_province on t_organization.provinceid=t_province.provinceid
	        					left join t_orggrantgroup  on  t_org_orggorup.groupid = t_orggrantgroup.groupid
	   <include refid="OrgOrggorup.findPage.where"/>
	   	   <isNotEmpty property="sortColumns"> ORDER BY $sortColumns$	</isNotEmpty>) 
	   	</isNotEmpty>    
	   	<include refid="OrgOrggorup.findPage.and"/>
    	<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
	
		
    </select>
	<delete id="OrgOrggorup.deleteByGroupId">
    <![CDATA[
        DELETE FROM t_org_orggorup WHERE
        groupid in ($groupid$) 
    ]]>
    </delete>
</sqlMap>
