package com.terrence.crm.dol.service;
import java.util.List;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.AssemblyRecord;
import com.terrence.crm.dol.query.AssemblyRecordQuery;
public interface IAssemblyRecordService
{
	public AssemblyRecord getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(AssemblyRecord entity) throws ServiceException;
	
	public java.lang.Long save(AssemblyRecord entity) throws ServiceException;
	
	public Integer update(AssemblyRecord entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<AssemblyRecord> findPage(Page<AssemblyRecord> page, AssemblyRecordQuery query) throws ServiceException;
	
	public Page<AssemblyRecord> findPage(Page<AssemblyRecord> page,String statement, AssemblyRecordQuery query) throws ServiceException;
	
	public List<AssemblyRecord> findList(AssemblyRecordQuery query) throws ServiceException;
	
	public List<AssemblyRecord> findList(AssemblyRecordQuery query,Integer pageSize) throws ServiceException;
	
	public List<AssemblyRecord> findList(AssemblyRecordQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<AssemblyRecord> findAllList() throws ServiceException;

	public void saveRecode(AssemblyRecord entity, List<Integer> radioList)  throws ServiceException;

	public AssemblyRecord findRecordData(AssemblyRecordQuery assemblyRecordQuery) throws ServiceException;

	public void updateData(AssemblyRecord entity) throws ServiceException;

	public void UpdateUNcheck(AssemblyRecord entity) throws ServiceException;
	
	
}