package com.terrence.crm.dol.service;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import com.terrence.crm.dol.base.core.Page;
import com.terrence.crm.dol.base.exception.ServiceException;
import com.terrence.crm.dol.bean.Forderinstock;
import com.terrence.crm.dol.bean.Forderinvoice;
import com.terrence.crm.dol.bean.Forderrefund;
import com.terrence.crm.dol.bean.Fordersend;
import com.terrence.crm.dol.bean.PerformanceDetail;
import com.terrence.crm.dol.bean.RecePl;
import com.terrence.crm.dol.bean.Receivable;
import com.terrence.crm.dol.query.PerformanceDetailQuery;
import com.terrence.crm.dol.query.ReceivableQuery;
public interface IReceivableService
{
	public Receivable getById(java.lang.Long id) throws ServiceException;
	
	public void saveOrUpdate(Receivable entity) throws ServiceException;
	
	public java.lang.Long save(Receivable entity) throws ServiceException;
	
	public Integer update(Receivable entity) throws ServiceException;
	
	public Integer deleteById(java.lang.Long id) throws ServiceException;
	
	public Integer deleteByMultipleId(List<java.lang.Long> idList) throws ServiceException;
	
	public boolean isUnique(String uniquePropertyNames, Object newValue, Object oldValue) throws ServiceException;
	
	public Page<Receivable> findPage(Page<Receivable> page, ReceivableQuery query) throws ServiceException;
	
	public Page<Receivable> findPage(Page<Receivable> page,String statement, ReceivableQuery query) throws ServiceException;
	
	public List<Receivable> findList(ReceivableQuery query) throws ServiceException;
	
	public List<Receivable> findList(ReceivableQuery query,Integer pageSize) throws ServiceException;
	
	public List<Receivable> findList(ReceivableQuery query,String statement,Integer pageSize) throws ServiceException;
	
	public List<Receivable> findAllList() throws ServiceException;

	public void saveAll(Receivable entity, List<RecePl> receplList,
			List<Fordersend> fordersendList,
			List<Forderinstock> forderinstockList,
			List<Forderinvoice> forderinvoiceList,
			List<Forderrefund> forderrefundList);
	public Receivable findrkhfkp(ReceivableQuery query) throws ServiceException;

	public void balanceRewardsByQuarter(PerformanceDetailQuery performanceDetailQuery) throws Exception;

	public void parseXlsx(String filepath) throws Exception;

	public void exportExcel2007(HttpServletResponse response,List<Receivable> receivables) throws Exception;

	public void savelngpre(List<Receivable> receivableList) throws Exception;
	
}