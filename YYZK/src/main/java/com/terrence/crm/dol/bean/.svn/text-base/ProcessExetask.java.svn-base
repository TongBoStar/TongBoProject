package com.terrence.crm.dol.bean;
import javax.persistence.Entity;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import com.terrence.crm.dol.base.BaseEntity;
import com.terrence.crm.dol.utils.DateConvertUtils;

@Entity
public class ProcessExetask extends BaseEntity implements java.io.Serializable {
	/**
	 * 序列化ID
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * 唯一标识
	 */
	private Long id;
	/**
	 * 流程任务代码
	 */
	private String taskCode;
	/**
	 * 节点名称
	 */
	private String nodeName;
	/**
	 * 节点顺序
	 */
	private Integer nodeSeq;
	/**
	 * 源单单号
	 */
	private String sourceCode;
	/**
	 * 源单ID
	 */
	private Long sourceId;
	/**
	 * 当前任务处理人
	 */
	private String handlers;
	/**
	 * 审批状态
	 */
	private Integer examineStatus;
	/**
	 * 审批意见
	 */
	private String fmark;
	/**
	 * 是否是驳回的
	 */
	private Integer isreback;
	/**
	 * 被驳回的节点的序号
	 */
	private Integer rebackNode;
	
	public Long getId(){
		return this.id;
	}
	public void setId(Long id){
		this.id=id;
	}
	public String getTaskCode(){
		return this.taskCode;
	}
	public void setTaskCode(String taskCode){
		this.taskCode=taskCode;
	}
	public String getNodeName(){
		return this.nodeName;
	}
	public void setNodeName(String nodeName){
		this.nodeName=nodeName;
	}
	public Integer getNodeSeq(){
		return this.nodeSeq;
	}
	public void setNodeSeq(Integer nodeSeq){
		this.nodeSeq=nodeSeq;
	}
	public String getSourceCode(){
		return this.sourceCode;
	}
	public void setSourceCode(String sourceCode){
		this.sourceCode=sourceCode;
	}
	public Long getSourceId() {
		return sourceId;
	}
	public void setSourceId(Long sourceId) {
		this.sourceId = sourceId;
	}
	public String getHandlers() {
		return handlers;
	}
	public void setHandlers(String handlers) {
		this.handlers = handlers;
	}
	public Integer getExamineStatus() {
		return examineStatus;
	}
	public void setExamineStatus(Integer examineStatus) {
		this.examineStatus = examineStatus;
	}
	public String getFmark() {
		return fmark;
	}
	public void setFmark(String fmark) {
		this.fmark = fmark;
	}
	public Integer getIsreback() {
		return isreback;
	}
	public void setIsreback(Integer isreback) {
		this.isreback = isreback;
	}
	public Integer getRebackNode() {
		return rebackNode;
	}
	public void setRebackNode(Integer rebackNode) {
		this.rebackNode = rebackNode;
	}
	public String toString() {
		return new ToStringBuilder(this)
			.append("Id",getId())
			.append("TaskCode",getTaskCode())
			.append("NodeName",getNodeName())
			.append("NodeSeq",getNodeSeq())
			.append("SourceCode",getSourceCode())
			.toString();
		}
	public int hashCode() {
		return new HashCodeBuilder()
			.append(getId())
			.append(getTaskCode())
			.append(getNodeName())
			.append(getNodeSeq())
			.append(getSourceCode())
			.toHashCode();
		}
	public boolean equals(Object obj) {
		if(obj instanceof ProcessExetask == false) return false;
		if(this == obj) return true;
		ProcessExetask other = (ProcessExetask)obj;
		return new EqualsBuilder()
			.append(getId(),other.getId())
			.append(getTaskCode(),other.getTaskCode())
			.append(getNodeName(),other.getNodeName())
			.append(getNodeSeq(),other.getNodeSeq())
			.append(getSourceCode(),other.getSourceCode())
			.isEquals();
		}

}
